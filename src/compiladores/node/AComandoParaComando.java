/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores.node;

import compiladores.analysis.*;

@SuppressWarnings("nls")
public final class AComandoParaComando extends PComando
{
    private TPara _para_;
    private PVar _var_;
    private TDe _de_;
    private TNum _num_;
    private TAte _ate_;
    private PNumA _numA_;
    private TFaca _faca_;
    private PComandoListVirg _comandoListVirg_;
    private PComando _comando_;
    private TPontoEVirg _pontoEVirg_;
    private TFimPara _fimPara_;
    private PPontoVirgAux _pontoVirgAux_;

    public AComandoParaComando()
    {
        // Constructor
    }

    public AComandoParaComando(
        @SuppressWarnings("hiding") TPara _para_,
        @SuppressWarnings("hiding") PVar _var_,
        @SuppressWarnings("hiding") TDe _de_,
        @SuppressWarnings("hiding") TNum _num_,
        @SuppressWarnings("hiding") TAte _ate_,
        @SuppressWarnings("hiding") PNumA _numA_,
        @SuppressWarnings("hiding") TFaca _faca_,
        @SuppressWarnings("hiding") PComandoListVirg _comandoListVirg_,
        @SuppressWarnings("hiding") PComando _comando_,
        @SuppressWarnings("hiding") TPontoEVirg _pontoEVirg_,
        @SuppressWarnings("hiding") TFimPara _fimPara_,
        @SuppressWarnings("hiding") PPontoVirgAux _pontoVirgAux_)
    {
        // Constructor
        setPara(_para_);

        setVar(_var_);

        setDe(_de_);

        setNum(_num_);

        setAte(_ate_);

        setNumA(_numA_);

        setFaca(_faca_);

        setComandoListVirg(_comandoListVirg_);

        setComando(_comando_);

        setPontoEVirg(_pontoEVirg_);

        setFimPara(_fimPara_);

        setPontoVirgAux(_pontoVirgAux_);

    }

    @Override
    public Object clone()
    {
        return new AComandoParaComando(
            cloneNode(this._para_),
            cloneNode(this._var_),
            cloneNode(this._de_),
            cloneNode(this._num_),
            cloneNode(this._ate_),
            cloneNode(this._numA_),
            cloneNode(this._faca_),
            cloneNode(this._comandoListVirg_),
            cloneNode(this._comando_),
            cloneNode(this._pontoEVirg_),
            cloneNode(this._fimPara_),
            cloneNode(this._pontoVirgAux_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoParaComando(this);
    }

    public TPara getPara()
    {
        return this._para_;
    }

    public void setPara(TPara node)
    {
        if(this._para_ != null)
        {
            this._para_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._para_ = node;
    }

    public PVar getVar()
    {
        return this._var_;
    }

    public void setVar(PVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TDe getDe()
    {
        return this._de_;
    }

    public void setDe(TDe node)
    {
        if(this._de_ != null)
        {
            this._de_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._de_ = node;
    }

    public TNum getNum()
    {
        return this._num_;
    }

    public void setNum(TNum node)
    {
        if(this._num_ != null)
        {
            this._num_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._num_ = node;
    }

    public TAte getAte()
    {
        return this._ate_;
    }

    public void setAte(TAte node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public PNumA getNumA()
    {
        return this._numA_;
    }

    public void setNumA(PNumA node)
    {
        if(this._numA_ != null)
        {
            this._numA_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numA_ = node;
    }

    public TFaca getFaca()
    {
        return this._faca_;
    }

    public void setFaca(TFaca node)
    {
        if(this._faca_ != null)
        {
            this._faca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._faca_ = node;
    }

    public PComandoListVirg getComandoListVirg()
    {
        return this._comandoListVirg_;
    }

    public void setComandoListVirg(PComandoListVirg node)
    {
        if(this._comandoListVirg_ != null)
        {
            this._comandoListVirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandoListVirg_ = node;
    }

    public PComando getComando()
    {
        return this._comando_;
    }

    public void setComando(PComando node)
    {
        if(this._comando_ != null)
        {
            this._comando_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comando_ = node;
    }

    public TPontoEVirg getPontoEVirg()
    {
        return this._pontoEVirg_;
    }

    public void setPontoEVirg(TPontoEVirg node)
    {
        if(this._pontoEVirg_ != null)
        {
            this._pontoEVirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirg_ = node;
    }

    public TFimPara getFimPara()
    {
        return this._fimPara_;
    }

    public void setFimPara(TFimPara node)
    {
        if(this._fimPara_ != null)
        {
            this._fimPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimPara_ = node;
    }

    public PPontoVirgAux getPontoVirgAux()
    {
        return this._pontoVirgAux_;
    }

    public void setPontoVirgAux(PPontoVirgAux node)
    {
        if(this._pontoVirgAux_ != null)
        {
            this._pontoVirgAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgAux_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._para_)
            + toString(this._var_)
            + toString(this._de_)
            + toString(this._num_)
            + toString(this._ate_)
            + toString(this._numA_)
            + toString(this._faca_)
            + toString(this._comandoListVirg_)
            + toString(this._comando_)
            + toString(this._pontoEVirg_)
            + toString(this._fimPara_)
            + toString(this._pontoVirgAux_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._para_ == child)
        {
            this._para_ = null;
            return;
        }

        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._de_ == child)
        {
            this._de_ = null;
            return;
        }

        if(this._num_ == child)
        {
            this._num_ = null;
            return;
        }

        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._numA_ == child)
        {
            this._numA_ = null;
            return;
        }

        if(this._faca_ == child)
        {
            this._faca_ = null;
            return;
        }

        if(this._comandoListVirg_ == child)
        {
            this._comandoListVirg_ = null;
            return;
        }

        if(this._comando_ == child)
        {
            this._comando_ = null;
            return;
        }

        if(this._pontoEVirg_ == child)
        {
            this._pontoEVirg_ = null;
            return;
        }

        if(this._fimPara_ == child)
        {
            this._fimPara_ = null;
            return;
        }

        if(this._pontoVirgAux_ == child)
        {
            this._pontoVirgAux_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._para_ == oldChild)
        {
            setPara((TPara) newChild);
            return;
        }

        if(this._var_ == oldChild)
        {
            setVar((PVar) newChild);
            return;
        }

        if(this._de_ == oldChild)
        {
            setDe((TDe) newChild);
            return;
        }

        if(this._num_ == oldChild)
        {
            setNum((TNum) newChild);
            return;
        }

        if(this._ate_ == oldChild)
        {
            setAte((TAte) newChild);
            return;
        }

        if(this._numA_ == oldChild)
        {
            setNumA((PNumA) newChild);
            return;
        }

        if(this._faca_ == oldChild)
        {
            setFaca((TFaca) newChild);
            return;
        }

        if(this._comandoListVirg_ == oldChild)
        {
            setComandoListVirg((PComandoListVirg) newChild);
            return;
        }

        if(this._comando_ == oldChild)
        {
            setComando((PComando) newChild);
            return;
        }

        if(this._pontoEVirg_ == oldChild)
        {
            setPontoEVirg((TPontoEVirg) newChild);
            return;
        }

        if(this._fimPara_ == oldChild)
        {
            setFimPara((TFimPara) newChild);
            return;
        }

        if(this._pontoVirgAux_ == oldChild)
        {
            setPontoVirgAux((PPontoVirgAux) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
