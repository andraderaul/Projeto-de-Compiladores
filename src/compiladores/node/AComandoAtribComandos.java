/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores.node;

import compiladores.analysis.*;

@SuppressWarnings("nls")
public final class AComandoAtribComandos extends PComandos
{
    private PVar _var_;
    private TAtrib _atrib_;
    private PExpOuElogica _expOuElogica_;
    private TPontoEVirg _pontoEVirg_;

    public AComandoAtribComandos()
    {
        // Constructor
    }

    public AComandoAtribComandos(
        @SuppressWarnings("hiding") PVar _var_,
        @SuppressWarnings("hiding") TAtrib _atrib_,
        @SuppressWarnings("hiding") PExpOuElogica _expOuElogica_,
        @SuppressWarnings("hiding") TPontoEVirg _pontoEVirg_)
    {
        // Constructor
        setVar(_var_);

        setAtrib(_atrib_);

        setExpOuElogica(_expOuElogica_);

        setPontoEVirg(_pontoEVirg_);

    }

    @Override
    public Object clone()
    {
        return new AComandoAtribComandos(
            cloneNode(this._var_),
            cloneNode(this._atrib_),
            cloneNode(this._expOuElogica_),
            cloneNode(this._pontoEVirg_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoAtribComandos(this);
    }

    public PVar getVar()
    {
        return this._var_;
    }

    public void setVar(PVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TAtrib getAtrib()
    {
        return this._atrib_;
    }

    public void setAtrib(TAtrib node)
    {
        if(this._atrib_ != null)
        {
            this._atrib_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atrib_ = node;
    }

    public PExpOuElogica getExpOuElogica()
    {
        return this._expOuElogica_;
    }

    public void setExpOuElogica(PExpOuElogica node)
    {
        if(this._expOuElogica_ != null)
        {
            this._expOuElogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expOuElogica_ = node;
    }

    public TPontoEVirg getPontoEVirg()
    {
        return this._pontoEVirg_;
    }

    public void setPontoEVirg(TPontoEVirg node)
    {
        if(this._pontoEVirg_ != null)
        {
            this._pontoEVirg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirg_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._var_)
            + toString(this._atrib_)
            + toString(this._expOuElogica_)
            + toString(this._pontoEVirg_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._atrib_ == child)
        {
            this._atrib_ = null;
            return;
        }

        if(this._expOuElogica_ == child)
        {
            this._expOuElogica_ = null;
            return;
        }

        if(this._pontoEVirg_ == child)
        {
            this._pontoEVirg_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._var_ == oldChild)
        {
            setVar((PVar) newChild);
            return;
        }

        if(this._atrib_ == oldChild)
        {
            setAtrib((TAtrib) newChild);
            return;
        }

        if(this._expOuElogica_ == oldChild)
        {
            setExpOuElogica((PExpOuElogica) newChild);
            return;
        }

        if(this._pontoEVirg_ == oldChild)
        {
            setPontoEVirg((TPontoEVirg) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
