/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores.parser;

import compiladores.lexer.*;
import compiladores.node.*;
import compiladores.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AStartStart */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAdeclaracaotipodeclaracoes1Declaracoes */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list);
            }
            break;
            case 2: /* reduce AAdeclaracaotipodeclaracoes2$VarVirgList1Declaracoes */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce ADeclaracaoConstDeclaracoes */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce ADeclaracaoListDeclaracaoList */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce AAdeclaracaolistadeclaracao1Declaracao */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list);
            }
            break;
            case 6: /* reduce AAdeclaracaolistadeclaracao2Declaracao */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce AAcomandocomando1Comando */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list);
            }
            break;
            case 8: /* reduce AAcomandocomando2$ComandoList1Comando */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list);
            }
            break;
            case 9: /* reduce AComandoAtribComandos */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list);
            }
            break;
            case 10: /* reduce AAcomandoleiacomandos1Comandos */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list);
            }
            break;
            case 11: /* reduce AAcomandoleiacomandos2$VarVirgList1Comandos */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list);
            }
            break;
            case 12: /* reduce AAcomandoescrevacomandos1Comandos */
            {
                ArrayList<Object> list = new12();
                push(goTo(5), list);
            }
            break;
            case 13: /* reduce AAcomandoescrevacomandos2$ExpList1Comandos */
            {
                ArrayList<Object> list = new13();
                push(goTo(5), list);
            }
            break;
            case 14: /* reduce AAcomandosecomandos1Comandos */
            {
                ArrayList<Object> list = new14();
                push(goTo(5), list);
            }
            break;
            case 15: /* reduce AAcomandosecomandos2$ComandoList1Comandos */
            {
                ArrayList<Object> list = new15();
                push(goTo(5), list);
            }
            break;
            case 16: /* reduce AAcomandosecomandos3Comandos */
            {
                ArrayList<Object> list = new16();
                push(goTo(5), list);
            }
            break;
            case 17: /* reduce AAcomandosecomandos4$ComandoList1Comandos */
            {
                ArrayList<Object> list = new17();
                push(goTo(5), list);
            }
            break;
            case 18: /* reduce AAcomandoavaliecomandos1Comandos */
            {
                ArrayList<Object> list = new18();
                push(goTo(5), list);
            }
            break;
            case 19: /* reduce AAcomandoavaliecomandos2Comandos */
            {
                ArrayList<Object> list = new19();
                push(goTo(5), list);
            }
            break;
            case 20: /* reduce AAcomandoavaliecomandos3Comandos */
            {
                ArrayList<Object> list = new20();
                push(goTo(5), list);
            }
            break;
            case 21: /* reduce AAcomandoavaliecomandos4Comandos */
            {
                ArrayList<Object> list = new21();
                push(goTo(5), list);
            }
            break;
            case 22: /* reduce AAcomandoenquantocomandos1Comandos */
            {
                ArrayList<Object> list = new22();
                push(goTo(5), list);
            }
            break;
            case 23: /* reduce AAcomandoenquantocomandos2$ComandoList1Comandos */
            {
                ArrayList<Object> list = new23();
                push(goTo(5), list);
            }
            break;
            case 24: /* reduce AAcomandorepitacomandos1Comandos */
            {
                ArrayList<Object> list = new24();
                push(goTo(5), list);
            }
            break;
            case 25: /* reduce AAcomandorepitacomandos2$ComandoList1Comandos */
            {
                ArrayList<Object> list = new25();
                push(goTo(5), list);
            }
            break;
            case 26: /* reduce AAcomandoparacomandos1Comandos */
            {
                ArrayList<Object> list = new26();
                push(goTo(5), list);
            }
            break;
            case 27: /* reduce AAcomandoparacomandos2$ComandoVirgula1Comandos */
            {
                ArrayList<Object> list = new27();
                push(goTo(5), list);
            }
            break;
            case 28: /* reduce AAcomandopassocomandos1Comandos */
            {
                ArrayList<Object> list = new28();
                push(goTo(5), list);
            }
            break;
            case 29: /* reduce AAcomandopassocomandos2$ComandoList1Comandos */
            {
                ArrayList<Object> list = new29();
                push(goTo(5), list);
            }
            break;
            case 30: /* reduce AVarVirgVarVirg */
            {
                ArrayList<Object> list = new30();
                push(goTo(6), list);
            }
            break;
            case 31: /* reduce AExpVirgExpVirg */
            {
                ArrayList<Object> list = new31();
                push(goTo(7), list);
            }
            break;
            case 32: /* reduce AElogicaVirgExpVirg */
            {
                ArrayList<Object> list = new32();
                push(goTo(7), list);
            }
            break;
            case 33: /* reduce ATipoReaTipo */
            {
                ArrayList<Object> list = new33();
                push(goTo(8), list);
            }
            break;
            case 34: /* reduce ATipoIntTipo */
            {
                ArrayList<Object> list = new34();
                push(goTo(8), list);
            }
            break;
            case 35: /* reduce ATipoCharTipo */
            {
                ArrayList<Object> list = new35();
                push(goTo(8), list);
            }
            break;
            case 36: /* reduce ATipoBoolTipo */
            {
                ArrayList<Object> list = new36();
                push(goTo(8), list);
            }
            break;
            case 37: /* reduce AVarIdVar */
            {
                ArrayList<Object> list = new37();
                push(goTo(9), list);
            }
            break;
            case 38: /* reduce AVarIndexVar */
            {
                ArrayList<Object> list = new38();
                push(goTo(9), list);
            }
            break;
            case 39: /* reduce AValStrValor */
            {
                ArrayList<Object> list = new39();
                push(goTo(10), list);
            }
            break;
            case 40: /* reduce AValNumValor */
            {
                ArrayList<Object> list = new40();
                push(goTo(10), list);
            }
            break;
            case 41: /* reduce AVarNumrealValor */
            {
                ArrayList<Object> list = new41();
                push(goTo(10), list);
            }
            break;
            case 42: /* reduce ANumANumA */
            {
                ArrayList<Object> list = new42();
                push(goTo(11), list);
            }
            break;
            case 43: /* reduce ANumBNumB */
            {
                ArrayList<Object> list = new43();
                push(goTo(12), list);
            }
            break;
            case 44: /* reduce APontoVirgAuxPontoVirgAux */
            {
                ArrayList<Object> list = new44();
                push(goTo(13), list);
            }
            break;
            case 45: /* reduce AAcomandosenaosenaocomando1SenaoComando */
            {
                ArrayList<Object> list = new45();
                push(goTo(14), list);
            }
            break;
            case 46: /* reduce AAcomandosenaosenaocomando2$ComandoList1SenaoComando */
            {
                ArrayList<Object> list = new46();
                push(goTo(14), list);
            }
            break;
            case 47: /* reduce AAcomandosenao2senaocomandodoispontos1SenaoComandoDoispontos */
            {
                ArrayList<Object> list = new47();
                push(goTo(15), list);
            }
            break;
            case 48: /* reduce AAcomandosenao2senaocomandodoispontos2$ComandoList1SenaoComandoDoispontos */
            {
                ArrayList<Object> list = new48();
                push(goTo(15), list);
            }
            break;
            case 49: /* reduce AAcomandocasocasocomandos1CasoComandos */
            {
                ArrayList<Object> list = new49();
                push(goTo(16), list);
            }
            break;
            case 50: /* reduce AAcomandocasocasocomandos2$ComandoList1CasoComandos */
            {
                ArrayList<Object> list = new50();
                push(goTo(16), list);
            }
            break;
            case 51: /* reduce ACasoComando */
            {
                ArrayList<Object> list = new51();
                push(goTo(17), list);
            }
            break;
            case 52: /* reduce AComandoPontoVirgComandoPontoVirg */
            {
                ArrayList<Object> list = new52();
                push(goTo(18), list);
            }
            break;
            case 53: /* reduce AExpSomaExp */
            {
                ArrayList<Object> list = new53();
                push(goTo(19), list);
            }
            break;
            case 54: /* reduce AExpSubtracaoExp */
            {
                ArrayList<Object> list = new54();
                push(goTo(19), list);
            }
            break;
            case 55: /* reduce AExpTermoExp */
            {
                ArrayList<Object> list = new55();
                push(goTo(19), list);
            }
            break;
            case 56: /* reduce ATermoMultTermo */
            {
                ArrayList<Object> list = new56();
                push(goTo(20), list);
            }
            break;
            case 57: /* reduce ATermoDivTermo */
            {
                ArrayList<Object> list = new57();
                push(goTo(20), list);
            }
            break;
            case 58: /* reduce ATermoFatorTermo */
            {
                ArrayList<Object> list = new58();
                push(goTo(20), list);
            }
            break;
            case 59: /* reduce AFatorValFator */
            {
                ArrayList<Object> list = new59();
                push(goTo(21), list);
            }
            break;
            case 60: /* reduce AFatorVarFator */
            {
                ArrayList<Object> list = new60();
                push(goTo(21), list);
            }
            break;
            case 61: /* reduce AFatorNegativoFator */
            {
                ArrayList<Object> list = new61();
                push(goTo(21), list);
            }
            break;
            case 62: /* reduce AFatorParentesesFator */
            {
                ArrayList<Object> list = new62();
                push(goTo(21), list);
            }
            break;
            case 63: /* reduce AExpLogicaEExpLogica */
            {
                ArrayList<Object> list = new63();
                push(goTo(22), list);
            }
            break;
            case 64: /* reduce AExpLogicaOuExpLogica */
            {
                ArrayList<Object> list = new64();
                push(goTo(22), list);
            }
            break;
            case 65: /* reduce AExpLogicaXorExpLogica */
            {
                ArrayList<Object> list = new65();
                push(goTo(22), list);
            }
            break;
            case 66: /* reduce AExpLogicaNaoExpLogica */
            {
                ArrayList<Object> list = new66();
                push(goTo(22), list);
            }
            break;
            case 67: /* reduce AExpLogicaTermoExpLogica */
            {
                ArrayList<Object> list = new67();
                push(goTo(22), list);
            }
            break;
            case 68: /* reduce AElogicaTermoParentesesExpLogicaTermo */
            {
                ArrayList<Object> list = new68();
                push(goTo(23), list);
            }
            break;
            case 69: /* reduce AElogicaTermoFatorExpLogicaTermo */
            {
                ArrayList<Object> list = new69();
                push(goTo(23), list);
            }
            break;
            case 70: /* reduce AElogicaFatorMenorigualExpLogicaFator */
            {
                ArrayList<Object> list = new70();
                push(goTo(24), list);
            }
            break;
            case 71: /* reduce AElogicaFatorMaiorigualExpLogicaFator */
            {
                ArrayList<Object> list = new71();
                push(goTo(24), list);
            }
            break;
            case 72: /* reduce AElogicaFatorMenorqExpLogicaFator */
            {
                ArrayList<Object> list = new72();
                push(goTo(24), list);
            }
            break;
            case 73: /* reduce AElogicaFatorMaiorqExpLogicaFator */
            {
                ArrayList<Object> list = new73();
                push(goTo(24), list);
            }
            break;
            case 74: /* reduce AElogicaFatorIgualExpLogicaFator */
            {
                ArrayList<Object> list = new74();
                push(goTo(24), list);
            }
            break;
            case 75: /* reduce AElogicaFatorDiferenteExpLogicaFator */
            {
                ArrayList<Object> list = new75();
                push(goTo(24), list);
            }
            break;
            case 76: /* reduce AExpExpOuElogica */
            {
                ArrayList<Object> list = new76();
                push(goTo(25), list);
            }
            break;
            case 77: /* reduce AElogicaExpOuElogica */
            {
                ArrayList<Object> list = new77();
                push(goTo(25), list);
            }
            break;
            case 78: /* reduce ATerminal$Declaracoes */
            {
                ArrayList<Object> list = new78();
                push(goTo(26), list);
            }
            break;
            case 79: /* reduce ANonTerminal$Declaracoes */
            {
                ArrayList<Object> list = new79();
                push(goTo(26), list);
            }
            break;
            case 80: /* reduce ATerminal$Comandos */
            {
                ArrayList<Object> list = new80();
                push(goTo(27), list);
            }
            break;
            case 81: /* reduce ANonTerminal$Comandos */
            {
                ArrayList<Object> list = new81();
                push(goTo(27), list);
            }
            break;
            case 82: /* reduce ATerminal$VarVirg */
            {
                ArrayList<Object> list = new82();
                push(goTo(28), list);
            }
            break;
            case 83: /* reduce ANonTerminal$VarVirg */
            {
                ArrayList<Object> list = new83();
                push(goTo(28), list);
            }
            break;
            case 84: /* reduce ATerminal$ExpVirg */
            {
                ArrayList<Object> list = new84();
                push(goTo(29), list);
            }
            break;
            case 85: /* reduce ANonTerminal$ExpVirg */
            {
                ArrayList<Object> list = new85();
                push(goTo(29), list);
            }
            break;
            case 86: /* reduce ATerminal$CasoComandos */
            {
                ArrayList<Object> list = new86();
                push(goTo(30), list);
            }
            break;
            case 87: /* reduce ANonTerminal$CasoComandos */
            {
                ArrayList<Object> list = new87();
                push(goTo(30), list);
            }
            break;
            case 88: /* reduce ATerminal$ComandoPontoVirg */
            {
                ArrayList<Object> list = new88();
                push(goTo(31), list);
            }
            break;
            case 89: /* reduce ANonTerminal$ComandoPontoVirg */
            {
                ArrayList<Object> list = new89();
                push(goTo(31), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AStartStart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        TInicio tinicioNode4;
        PDeclaracao pdeclaracaoNode5;
        PComando pcomandoNode6;
        TFimPrograma tfimprogramaNode7;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        pdeclaracaoNode5 = (PDeclaracao)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);
        tfimprogramaNode7 = (TFimPrograma)nodeArrayList6.get(0);

        pstartNode1 = new AStartStart(tprogramaNode2, tidNode3, tinicioNode4, pdeclaracaoNode5, pcomandoNode6, tfimprogramaNode7);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAdeclaracaotipodeclaracoes1Declaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PVar pvarNode5;
        TPontoEVirg tpontoevirgNode6;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pvarNode5 = (PVar)nodeArrayList3.get(0);
        tpontoevirgNode6 = (TPontoEVirg)nodeArrayList4.get(0);

        pdeclaracoesNode1 = new ADeclaracaoTipoDeclaracoes(ptipoNode2, tdoispontosNode3, null, pvarNode5, tpontoevirgNode6);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAdeclaracaotipodeclaracoes2$VarVirgList1Declaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PVarVirgList pvarvirglistNode4;
        PVar pvarNode7;
        TPontoEVirg tpontoevirgNode8;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pvarvirglistNode4 = new AVarVirgListVarVirgList(listNode6);
        }
        pvarNode7 = (PVar)nodeArrayList4.get(0);
        tpontoevirgNode8 = (TPontoEVirg)nodeArrayList5.get(0);

        pdeclaracoesNode1 = new ADeclaracaoTipoDeclaracoes(ptipoNode2, tdoispontosNode3, pvarvirglistNode4, pvarNode7, tpontoevirgNode8);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ADeclaracaoConstDeclaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        TConst tconstNode2;
        TId tidNode3;
        PValor pvalorNode4;
        TPontoEVirg tpontoevirgNode5;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontoevirgNode5 = (TPontoEVirg)nodeArrayList4.get(0);

        pdeclaracoesNode1 = new ADeclaracaoConstDeclaracoes(tconstNode2, tidNode3, pvalorNode4, tpontoevirgNode5);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADeclaracaoListDeclaracaoList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracaoList pdeclaracaolistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pdeclaracaolistNode1 = new ADeclaracaoListDeclaracaoList(listNode3);
        }
	nodeList.add(pdeclaracaolistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAdeclaracaolistadeclaracao1Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        pdeclaracaoNode1 = new ADeclaracaoListaDeclaracao(null);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AAdeclaracaolistadeclaracao2Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PDeclaracaoList pdeclaracaolistNode2;
        pdeclaracaolistNode2 = (PDeclaracaoList)nodeArrayList1.get(0);

        pdeclaracaoNode1 = new ADeclaracaoListaDeclaracao(pdeclaracaolistNode2);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AAcomandocomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PComando pcomandoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        pcomandoNode1 = new AComandoComando(null);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AAcomandocomando2$ComandoList1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoList pcomandolistNode2;
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pcomandolistNode2 = new AComandoListComandoList(listNode4);
        }

        pcomandoNode1 = new AComandoComando(pcomandolistNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AComandoAtribComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PVar pvarNode2;
        TAtrib tatribNode3;
        PExpOuElogica pexpouelogicaNode4;
        TPontoEVirg tpontoevirgNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribNode3 = (TAtrib)nodeArrayList2.get(0);
        pexpouelogicaNode4 = (PExpOuElogica)nodeArrayList3.get(0);
        tpontoevirgNode5 = (TPontoEVirg)nodeArrayList4.get(0);

        pcomandosNode1 = new AComandoAtribComandos(pvarNode2, tatribNode3, pexpouelogicaNode4, tpontoevirgNode5);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAcomandoleiacomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAParentese taparenteseNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PVar pvarNode5;
        TFParentese tfparenteseNode6;
        TPontoEVirg tpontoevirgNode7;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pvarNode5 = (PVar)nodeArrayList3.get(0);
        tfparenteseNode6 = (TFParentese)nodeArrayList4.get(0);
        tpontoevirgNode7 = (TPontoEVirg)nodeArrayList5.get(0);

        pcomandosNode1 = new AComandoLeiaComandos(tleiaNode2, taparenteseNode3, null, pvarNode5, tfparenteseNode6, tpontoevirgNode7);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AAcomandoleiacomandos2$VarVirgList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAParentese taparenteseNode3;
        PVarVirgList pvarvirglistNode4;
        PVar pvarNode7;
        TFParentese tfparenteseNode8;
        TPontoEVirg tpontoevirgNode9;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pvarvirglistNode4 = new AVarVirgListVarVirgList(listNode6);
        }
        pvarNode7 = (PVar)nodeArrayList4.get(0);
        tfparenteseNode8 = (TFParentese)nodeArrayList5.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList6.get(0);

        pcomandosNode1 = new AComandoLeiaComandos(tleiaNode2, taparenteseNode3, pvarvirglistNode4, pvarNode7, tfparenteseNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AAcomandoescrevacomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAParentese taparenteseNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PExpOuElogica pexpouelogicaNode5;
        TFParentese tfparenteseNode6;
        TPontoEVirg tpontoevirgNode7;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexpouelogicaNode5 = (PExpOuElogica)nodeArrayList3.get(0);
        tfparenteseNode6 = (TFParentese)nodeArrayList4.get(0);
        tpontoevirgNode7 = (TPontoEVirg)nodeArrayList5.get(0);

        pcomandosNode1 = new AComandoEscrevaComandos(tescrevaNode2, taparenteseNode3, null, pexpouelogicaNode5, tfparenteseNode6, tpontoevirgNode7);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AAcomandoescrevacomandos2$ExpList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAParentese taparenteseNode3;
        PExpList pexplistNode4;
        PExpOuElogica pexpouelogicaNode7;
        TFParentese tfparenteseNode8;
        TPontoEVirg tpontoevirgNode9;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pexplistNode4 = new AExpListExpList(listNode6);
        }
        pexpouelogicaNode7 = (PExpOuElogica)nodeArrayList4.get(0);
        tfparenteseNode8 = (TFParentese)nodeArrayList5.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList6.get(0);

        pcomandosNode1 = new AComandoEscrevaComandos(tescrevaNode2, taparenteseNode3, pexplistNode4, pexpouelogicaNode7, tfparenteseNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AAcomandosecomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TSe tseNode2;
        TAParentese taparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFParentese tfparenteseNode5;
        TEntao tentaoNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PComandos pcomandosNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        TFimSe tfimseNode10;
        TPontoEVirg tpontoevirgNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandosNode8 = (PComandos)nodeArrayList6.get(0);
        tfimseNode10 = (TFimSe)nodeArrayList7.get(0);
        tpontoevirgNode11 = (TPontoEVirg)nodeArrayList8.get(0);

        pcomandosNode1 = new AComandoSeComandos(tseNode2, taparenteseNode3, pexplogicaNode4, tfparenteseNode5, tentaoNode6, null, pcomandosNode8, null, tfimseNode10, tpontoevirgNode11);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAcomandosecomandos2$ComandoList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TSe tseNode2;
        TAParentese taparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFParentese tfparenteseNode5;
        TEntao tentaoNode6;
        PComandoList pcomandolistNode7;
        PComandos pcomandosNode10;
        @SuppressWarnings("unused") Object nullNode11 = null;
        TFimSe tfimseNode12;
        TPontoEVirg tpontoevirgNode13;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pcomandolistNode7 = new AComandoListComandoList(listNode9);
        }
        pcomandosNode10 = (PComandos)nodeArrayList7.get(0);
        tfimseNode12 = (TFimSe)nodeArrayList8.get(0);
        tpontoevirgNode13 = (TPontoEVirg)nodeArrayList9.get(0);

        pcomandosNode1 = new AComandoSeComandos(tseNode2, taparenteseNode3, pexplogicaNode4, tfparenteseNode5, tentaoNode6, pcomandolistNode7, pcomandosNode10, null, tfimseNode12, tpontoevirgNode13);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAcomandosecomandos3Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TSe tseNode2;
        TAParentese taparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFParentese tfparenteseNode5;
        TEntao tentaoNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PComandos pcomandosNode8;
        PSenaoComando psenaocomandoNode9;
        TFimSe tfimseNode10;
        TPontoEVirg tpontoevirgNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandosNode8 = (PComandos)nodeArrayList6.get(0);
        psenaocomandoNode9 = (PSenaoComando)nodeArrayList7.get(0);
        tfimseNode10 = (TFimSe)nodeArrayList8.get(0);
        tpontoevirgNode11 = (TPontoEVirg)nodeArrayList9.get(0);

        pcomandosNode1 = new AComandoSeComandos(tseNode2, taparenteseNode3, pexplogicaNode4, tfparenteseNode5, tentaoNode6, null, pcomandosNode8, psenaocomandoNode9, tfimseNode10, tpontoevirgNode11);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAcomandosecomandos4$ComandoList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TSe tseNode2;
        TAParentese taparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFParentese tfparenteseNode5;
        TEntao tentaoNode6;
        PComandoList pcomandolistNode7;
        PComandos pcomandosNode10;
        PSenaoComando psenaocomandoNode11;
        TFimSe tfimseNode12;
        TPontoEVirg tpontoevirgNode13;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pcomandolistNode7 = new AComandoListComandoList(listNode9);
        }
        pcomandosNode10 = (PComandos)nodeArrayList7.get(0);
        psenaocomandoNode11 = (PSenaoComando)nodeArrayList8.get(0);
        tfimseNode12 = (TFimSe)nodeArrayList9.get(0);
        tpontoevirgNode13 = (TPontoEVirg)nodeArrayList10.get(0);

        pcomandosNode1 = new AComandoSeComandos(tseNode2, taparenteseNode3, pexplogicaNode4, tfparenteseNode5, tentaoNode6, pcomandolistNode7, pcomandosNode10, psenaocomandoNode11, tfimseNode12, tpontoevirgNode13);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAcomandoavaliecomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAParentese taparenteseNode3;
        PExpOuElogica pexpouelogicaNode4;
        TFParentese tfparenteseNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFimAvalie tfimavalieNode8;
        TPontoEVirg tpontoevirgNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexpouelogicaNode4 = (PExpOuElogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList5.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList6.get(0);

        pcomandosNode1 = new AComandoAvalieComandos(tavalieNode2, taparenteseNode3, pexpouelogicaNode4, tfparenteseNode5, null, null, tfimavalieNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAcomandoavaliecomandos2Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAParentese taparenteseNode3;
        PExpOuElogica pexpouelogicaNode4;
        TFParentese tfparenteseNode5;
        PCasoComando pcasocomandoNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFimAvalie tfimavalieNode8;
        TPontoEVirg tpontoevirgNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexpouelogicaNode4 = (PExpOuElogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        pcasocomandoNode6 = (PCasoComando)nodeArrayList5.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList6.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList7.get(0);

        pcomandosNode1 = new AComandoAvalieComandos(tavalieNode2, taparenteseNode3, pexpouelogicaNode4, tfparenteseNode5, pcasocomandoNode6, null, tfimavalieNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAcomandoavaliecomandos3Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAParentese taparenteseNode3;
        PExpOuElogica pexpouelogicaNode4;
        TFParentese tfparenteseNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PSenaoComandoDoispontos psenaocomandodoispontosNode7;
        TFimAvalie tfimavalieNode8;
        TPontoEVirg tpontoevirgNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexpouelogicaNode4 = (PExpOuElogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        psenaocomandodoispontosNode7 = (PSenaoComandoDoispontos)nodeArrayList5.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList6.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList7.get(0);

        pcomandosNode1 = new AComandoAvalieComandos(tavalieNode2, taparenteseNode3, pexpouelogicaNode4, tfparenteseNode5, null, psenaocomandodoispontosNode7, tfimavalieNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAcomandoavaliecomandos4Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAParentese taparenteseNode3;
        PExpOuElogica pexpouelogicaNode4;
        TFParentese tfparenteseNode5;
        PCasoComando pcasocomandoNode6;
        PSenaoComandoDoispontos psenaocomandodoispontosNode7;
        TFimAvalie tfimavalieNode8;
        TPontoEVirg tpontoevirgNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexpouelogicaNode4 = (PExpOuElogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        pcasocomandoNode6 = (PCasoComando)nodeArrayList5.get(0);
        psenaocomandodoispontosNode7 = (PSenaoComandoDoispontos)nodeArrayList6.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList7.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList8.get(0);

        pcomandosNode1 = new AComandoAvalieComandos(tavalieNode2, taparenteseNode3, pexpouelogicaNode4, tfparenteseNode5, pcasocomandoNode6, psenaocomandodoispontosNode7, tfimavalieNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAcomandoenquantocomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAParentese taparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFParentese tfparenteseNode5;
        TFaca tfacaNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PComandos pcomandosNode8;
        TFimEnquanto tfimenquantoNode9;
        TPontoEVirg tpontoevirgNode10;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcomandosNode8 = (PComandos)nodeArrayList6.get(0);
        tfimenquantoNode9 = (TFimEnquanto)nodeArrayList7.get(0);
        tpontoevirgNode10 = (TPontoEVirg)nodeArrayList8.get(0);

        pcomandosNode1 = new AComandoEnquantoComandos(tenquantoNode2, taparenteseNode3, pexplogicaNode4, tfparenteseNode5, tfacaNode6, null, pcomandosNode8, tfimenquantoNode9, tpontoevirgNode10);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAcomandoenquantocomandos2$ComandoList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAParentese taparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFParentese tfparenteseNode5;
        TFaca tfacaNode6;
        PComandoList pcomandolistNode7;
        PComandos pcomandosNode10;
        TFimEnquanto tfimenquantoNode11;
        TPontoEVirg tpontoevirgNode12;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        taparenteseNode3 = (TAParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfparenteseNode5 = (TFParentese)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pcomandolistNode7 = new AComandoListComandoList(listNode9);
        }
        pcomandosNode10 = (PComandos)nodeArrayList7.get(0);
        tfimenquantoNode11 = (TFimEnquanto)nodeArrayList8.get(0);
        tpontoevirgNode12 = (TPontoEVirg)nodeArrayList9.get(0);

        pcomandosNode1 = new AComandoEnquantoComandos(tenquantoNode2, taparenteseNode3, pexplogicaNode4, tfparenteseNode5, tfacaNode6, pcomandolistNode7, pcomandosNode10, tfimenquantoNode11, tpontoevirgNode12);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAcomandorepitacomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TRepita trepitaNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PComandos pcomandosNode4;
        TAte tateNode5;
        TAParentese taparenteseNode6;
        PExpLogica pexplogicaNode7;
        TFParentese tfparenteseNode8;
        TPontoEVirg tpontoevirgNode9;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcomandosNode4 = (PComandos)nodeArrayList2.get(0);
        tateNode5 = (TAte)nodeArrayList3.get(0);
        taparenteseNode6 = (TAParentese)nodeArrayList4.get(0);
        pexplogicaNode7 = (PExpLogica)nodeArrayList5.get(0);
        tfparenteseNode8 = (TFParentese)nodeArrayList6.get(0);
        tpontoevirgNode9 = (TPontoEVirg)nodeArrayList7.get(0);

        pcomandosNode1 = new AComandoRepitaComandos(trepitaNode2, null, pcomandosNode4, tateNode5, taparenteseNode6, pexplogicaNode7, tfparenteseNode8, tpontoevirgNode9);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAcomandorepitacomandos2$ComandoList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TRepita trepitaNode2;
        PComandoList pcomandolistNode3;
        PComandos pcomandosNode6;
        TAte tateNode7;
        TAParentese taparenteseNode8;
        PExpLogica pexplogicaNode9;
        TFParentese tfparenteseNode10;
        TPontoEVirg tpontoevirgNode11;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pcomandolistNode3 = new AComandoListComandoList(listNode5);
        }
        pcomandosNode6 = (PComandos)nodeArrayList3.get(0);
        tateNode7 = (TAte)nodeArrayList4.get(0);
        taparenteseNode8 = (TAParentese)nodeArrayList5.get(0);
        pexplogicaNode9 = (PExpLogica)nodeArrayList6.get(0);
        tfparenteseNode10 = (TFParentese)nodeArrayList7.get(0);
        tpontoevirgNode11 = (TPontoEVirg)nodeArrayList8.get(0);

        pcomandosNode1 = new AComandoRepitaComandos(trepitaNode2, pcomandolistNode3, pcomandosNode6, tateNode7, taparenteseNode8, pexplogicaNode9, tfparenteseNode10, tpontoevirgNode11);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAcomandoparacomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNum tnumNode5;
        TAte tateNode6;
        PNumA pnumaNode7;
        TFaca tfacaNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        PComandos pcomandosNode10;
        TPontoEVirg tpontoevirgNode11;
        TFimPara tfimparaNode12;
        PPontoVirgAux ppontovirgauxNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumNode5 = (TNum)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        pnumaNode7 = (PNumA)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        pcomandosNode10 = (PComandos)nodeArrayList8.get(0);
        tpontoevirgNode11 = (TPontoEVirg)nodeArrayList9.get(0);
        tfimparaNode12 = (TFimPara)nodeArrayList10.get(0);
        ppontovirgauxNode13 = (PPontoVirgAux)nodeArrayList11.get(0);

        pcomandosNode1 = new AComandoParaComandos(tparaNode2, pvarNode3, tdeNode4, tnumNode5, tateNode6, pnumaNode7, tfacaNode8, null, pcomandosNode10, tpontoevirgNode11, tfimparaNode12, ppontovirgauxNode13);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAcomandoparacomandos2$ComandoVirgula1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNum tnumNode5;
        TAte tateNode6;
        PNumA pnumaNode7;
        TFaca tfacaNode8;
        PComandoListVirg pcomandolistvirgNode9;
        PComandos pcomandosNode12;
        TPontoEVirg tpontoevirgNode13;
        TFimPara tfimparaNode14;
        PPontoVirgAux ppontovirgauxNode15;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumNode5 = (TNum)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        pnumaNode7 = (PNumA)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        {
            // Block
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        listNode10 = (LinkedList)nodeArrayList8.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pcomandolistvirgNode9 = new AComandoVirgulaComandoListVirg(listNode11);
        }
        pcomandosNode12 = (PComandos)nodeArrayList9.get(0);
        tpontoevirgNode13 = (TPontoEVirg)nodeArrayList10.get(0);
        tfimparaNode14 = (TFimPara)nodeArrayList11.get(0);
        ppontovirgauxNode15 = (PPontoVirgAux)nodeArrayList12.get(0);

        pcomandosNode1 = new AComandoParaComandos(tparaNode2, pvarNode3, tdeNode4, tnumNode5, tateNode6, pnumaNode7, tfacaNode8, pcomandolistvirgNode9, pcomandosNode12, tpontoevirgNode13, tfimparaNode14, ppontovirgauxNode15);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAcomandopassocomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNum tnumNode5;
        TPasso tpassoNode6;
        PNumA pnumaNode7;
        TAte tateNode8;
        PNumB pnumbNode9;
        TFaca tfacaNode10;
        @SuppressWarnings("unused") Object nullNode11 = null;
        PComandos pcomandosNode12;
        TFimPara tfimparaNode13;
        TPontoEVirg tpontoevirgNode14;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumNode5 = (TNum)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        pnumaNode7 = (PNumA)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        pnumbNode9 = (PNumB)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        pcomandosNode12 = (PComandos)nodeArrayList10.get(0);
        tfimparaNode13 = (TFimPara)nodeArrayList11.get(0);
        tpontoevirgNode14 = (TPontoEVirg)nodeArrayList12.get(0);

        pcomandosNode1 = new AComandoPassoComandos(tparaNode2, pvarNode3, tdeNode4, tnumNode5, tpassoNode6, pnumaNode7, tateNode8, pnumbNode9, tfacaNode10, null, pcomandosNode12, tfimparaNode13, tpontoevirgNode14);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAcomandopassocomandos2$ComandoList1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNum tnumNode5;
        TPasso tpassoNode6;
        PNumA pnumaNode7;
        TAte tateNode8;
        PNumB pnumbNode9;
        TFaca tfacaNode10;
        PComandoList pcomandolistNode11;
        PComandos pcomandosNode14;
        TFimPara tfimparaNode15;
        TPontoEVirg tpontoevirgNode16;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumNode5 = (TNum)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        pnumaNode7 = (PNumA)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        pnumbNode9 = (PNumB)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        {
            // Block
        LinkedList<Object> listNode13 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode12 = new LinkedList<Object>();
        listNode12 = (LinkedList)nodeArrayList10.get(0);
	if(listNode12 != null)
	{
	  listNode13.addAll(listNode12);
	}
        }

        pcomandolistNode11 = new AComandoListComandoList(listNode13);
        }
        pcomandosNode14 = (PComandos)nodeArrayList11.get(0);
        tfimparaNode15 = (TFimPara)nodeArrayList12.get(0);
        tpontoevirgNode16 = (TPontoEVirg)nodeArrayList13.get(0);

        pcomandosNode1 = new AComandoPassoComandos(tparaNode2, pvarNode3, tdeNode4, tnumNode5, tpassoNode6, pnumaNode7, tateNode8, pnumbNode9, tfacaNode10, pcomandolistNode11, pcomandosNode14, tfimparaNode15, tpontoevirgNode16);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AVarVirgVarVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarVirg pvarvirgNode1;
        {
            // Block
        PVar pvarNode2;
        TVirg tvirgNode3;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tvirgNode3 = (TVirg)nodeArrayList2.get(0);

        pvarvirgNode1 = new AVarVirgVarVirg(pvarNode2, tvirgNode3);
        }
	nodeList.add(pvarvirgNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AExpVirgExpVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVirg pexpvirgNode1;
        {
            // Block
        PExp pexpNode2;
        TVirg tvirgNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgNode3 = (TVirg)nodeArrayList2.get(0);

        pexpvirgNode1 = new AExpVirgExpVirg(pexpNode2, tvirgNode3);
        }
	nodeList.add(pexpvirgNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AElogicaVirgExpVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVirg pexpvirgNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TVirg tvirgNode3;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        tvirgNode3 = (TVirg)nodeArrayList2.get(0);

        pexpvirgNode1 = new AElogicaVirgExpVirg(pexplogicaNode2, tvirgNode3);
        }
	nodeList.add(pexpvirgNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ATipoReaTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoReaTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ATipoIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoIntTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ATipoCharTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoCharTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ATipoBoolTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TBooleano tbooleanoNode2;
        tbooleanoNode2 = (TBooleano)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoBoolTipo(tbooleanoNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AVarIdVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvarNode1 = new AVarIdVar(tidNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AVarIndexVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        TAColchete tacolcheteNode3;
        TNum tnumNode4;
        TFColchete tfcolcheteNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tacolcheteNode3 = (TAColchete)nodeArrayList2.get(0);
        tnumNode4 = (TNum)nodeArrayList3.get(0);
        tfcolcheteNode5 = (TFColchete)nodeArrayList4.get(0);

        pvarNode1 = new AVarIndexVar(tidNode2, tacolcheteNode3, tnumNode4, tfcolcheteNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AValStrValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AValStrValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AValNumValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNum tnumNode2;
        tnumNode2 = (TNum)nodeArrayList1.get(0);

        pvalorNode1 = new AValNumValor(tnumNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AVarNumrealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumreal tnumrealNode2;
        tnumrealNode2 = (TNumreal)nodeArrayList1.get(0);

        pvalorNode1 = new AVarNumrealValor(tnumrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ANumANumA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNumA pnumaNode1;
        {
            // Block
        TNum tnumNode2;
        tnumNode2 = (TNum)nodeArrayList1.get(0);

        pnumaNode1 = new ANumANumA(tnumNode2);
        }
	nodeList.add(pnumaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ANumBNumB */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNumB pnumbNode1;
        {
            // Block
        TNum tnumNode2;
        tnumNode2 = (TNum)nodeArrayList1.get(0);

        pnumbNode1 = new ANumBNumB(tnumNode2);
        }
	nodeList.add(pnumbNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce APontoVirgAuxPontoVirgAux */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPontoVirgAux ppontovirgauxNode1;
        {
            // Block
        TPontoEVirg tpontoevirgNode2;
        tpontoevirgNode2 = (TPontoEVirg)nodeArrayList1.get(0);

        ppontovirgauxNode1 = new APontoVirgAuxPontoVirgAux(tpontoevirgNode2);
        }
	nodeList.add(ppontovirgauxNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AAcomandosenaosenaocomando1SenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComando psenaocomandoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PComandos pcomandosNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandosNode4 = (PComandos)nodeArrayList2.get(0);

        psenaocomandoNode1 = new AComandoSenaoSenaoComando(tsenaoNode2, null, pcomandosNode4);
        }
	nodeList.add(psenaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AAcomandosenaosenaocomando2$ComandoList1SenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComando psenaocomandoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComandoList pcomandolistNode3;
        PComandos pcomandosNode6;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pcomandolistNode3 = new AComandoListComandoList(listNode5);
        }
        pcomandosNode6 = (PComandos)nodeArrayList3.get(0);

        psenaocomandoNode1 = new AComandoSenaoSenaoComando(tsenaoNode2, pcomandolistNode3, pcomandosNode6);
        }
	nodeList.add(psenaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AAcomandosenao2senaocomandodoispontos1SenaoComandoDoispontos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComandoDoispontos psenaocomandodoispontosNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPontos tdoispontosNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PComandos pcomandosNode5;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pcomandosNode5 = (PComandos)nodeArrayList3.get(0);

        psenaocomandodoispontosNode1 = new AComandoSenao2SenaoComandoDoispontos(tsenaoNode2, tdoispontosNode3, null, pcomandosNode5);
        }
	nodeList.add(psenaocomandodoispontosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AAcomandosenao2senaocomandodoispontos2$ComandoList1SenaoComandoDoispontos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoComandoDoispontos psenaocomandodoispontosNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPontos tdoispontosNode3;
        PComandoList pcomandolistNode4;
        PComandos pcomandosNode7;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pcomandolistNode4 = new AComandoListComandoList(listNode6);
        }
        pcomandosNode7 = (PComandos)nodeArrayList4.get(0);

        psenaocomandodoispontosNode1 = new AComandoSenao2SenaoComandoDoispontos(tsenaoNode2, tdoispontosNode3, pcomandolistNode4, pcomandosNode7);
        }
	nodeList.add(psenaocomandodoispontosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AAcomandocasocasocomandos1CasoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoComandos pcasocomandosNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PComandos pcomandosNode6;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pcomandosNode6 = (PComandos)nodeArrayList4.get(0);

        pcasocomandosNode1 = new AComandoCasoCasoComandos(tcasoNode2, pvalorNode3, tdoispontosNode4, null, pcomandosNode6);
        }
	nodeList.add(pcasocomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AAcomandocasocasocomandos2$ComandoList1CasoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoComandos pcasocomandosNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        PComandoList pcomandolistNode5;
        PComandos pcomandosNode8;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pcomandolistNode5 = new AComandoListComandoList(listNode7);
        }
        pcomandosNode8 = (PComandos)nodeArrayList5.get(0);

        pcasocomandosNode1 = new AComandoCasoCasoComandos(tcasoNode2, pvalorNode3, tdoispontosNode4, pcomandolistNode5, pcomandosNode8);
        }
	nodeList.add(pcasocomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ACasoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoComando pcasocomandoNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pcasocomandoNode1 = new ACasoComando(listNode3);
        }
	nodeList.add(pcasocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AComandoPontoVirgComandoPontoVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoPontoVirg pcomandopontovirgNode1;
        {
            // Block
        PComandos pcomandosNode2;
        TPontoEVirg tpontoevirgNode3;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        tpontoevirgNode3 = (TPontoEVirg)nodeArrayList2.get(0);

        pcomandopontovirgNode1 = new AComandoPontoVirgComandoPontoVirg(pcomandosNode2, tpontoevirgNode3);
        }
	nodeList.add(pcomandopontovirgNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AExpSomaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TMais tmaisNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaisNode3 = (TMais)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpNode1 = new AExpSomaExp(pexpNode2, tmaisNode3, ptermoNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AExpSubtracaoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TMenos tmenosNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpNode1 = new AExpSubtracaoExp(pexpNode2, tmenosNode3, ptermoNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AExpTermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpNode1 = new AExpTermoExp(ptermoNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ATermoMultTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMult tmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ATermoMultTermo(ptermoNode2, tmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce ATermoDivTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TDiv tdivNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ATermoDivTermo(ptermoNode2, tdivNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ATermoFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new ATermoFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AFatorValFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AFatorValFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AFatorVarFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pfatorNode1 = new AFatorVarFator(pvarNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AFatorNegativoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TMenos tmenosNode2;
        PFator pfatorNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);

        pfatorNode1 = new AFatorNegativoFator(tmenosNode2, pfatorNode3);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AFatorParentesesFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAParentese taparenteseNode2;
        PFator pfatorNode3;
        TFParentese tfparenteseNode4;
        taparenteseNode2 = (TAParentese)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);
        tfparenteseNode4 = (TFParentese)nodeArrayList3.get(0);

        pfatorNode1 = new AFatorParentesesFator(taparenteseNode2, pfatorNode3, tfparenteseNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AExpLogicaEExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TE teNode3;
        PExpLogicaTermo pexplogicatermoNode4;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexplogicatermoNode4 = (PExpLogicaTermo)nodeArrayList3.get(0);

        pexplogicaNode1 = new AExpLogicaEExpLogica(pexplogicaNode2, teNode3, pexplogicatermoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AExpLogicaOuExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TOu touNode3;
        PExpLogicaTermo pexplogicatermoNode4;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexplogicatermoNode4 = (PExpLogicaTermo)nodeArrayList3.get(0);

        pexplogicaNode1 = new AExpLogicaOuExpLogica(pexplogicaNode2, touNode3, pexplogicatermoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AExpLogicaXorExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TXor txorNode3;
        PExpLogicaTermo pexplogicatermoNode4;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        pexplogicatermoNode4 = (PExpLogicaTermo)nodeArrayList3.get(0);

        pexplogicaNode1 = new AExpLogicaXorExpLogica(pexplogicaNode2, txorNode3, pexplogicatermoNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AExpLogicaNaoExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        TNao tnaoNode2;
        PExpLogicaTermo pexplogicatermoNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        pexplogicatermoNode3 = (PExpLogicaTermo)nodeArrayList2.get(0);

        pexplogicaNode1 = new AExpLogicaNaoExpLogica(tnaoNode2, pexplogicatermoNode3);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AExpLogicaTermoExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpLogicaTermo pexplogicatermoNode2;
        pexplogicatermoNode2 = (PExpLogicaTermo)nodeArrayList1.get(0);

        pexplogicaNode1 = new AExpLogicaTermoExpLogica(pexplogicatermoNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AElogicaTermoParentesesExpLogicaTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaTermo pexplogicatermoNode1;
        {
            // Block
        TAParentese taparenteseNode2;
        PExpLogica pexplogicaNode3;
        TFParentese tfparenteseNode4;
        taparenteseNode2 = (TAParentese)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);
        tfparenteseNode4 = (TFParentese)nodeArrayList3.get(0);

        pexplogicatermoNode1 = new AElogicaTermoParentesesExpLogicaTermo(taparenteseNode2, pexplogicaNode3, tfparenteseNode4);
        }
	nodeList.add(pexplogicatermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AElogicaTermoFatorExpLogicaTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaTermo pexplogicatermoNode1;
        {
            // Block
        PExpLogicaFator pexplogicafatorNode2;
        pexplogicafatorNode2 = (PExpLogicaFator)nodeArrayList1.get(0);

        pexplogicatermoNode1 = new AElogicaTermoFatorExpLogicaTermo(pexplogicafatorNode2);
        }
	nodeList.add(pexplogicatermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AElogicaFatorMenorigualExpLogicaFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaFator pexplogicafatorNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorOuIgualQ tmenorouigualqNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmenorouigualqNode3 = (TMenorOuIgualQ)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexplogicafatorNode1 = new AElogicaFatorMenorigualExpLogicaFator(pexpNode2, tmenorouigualqNode3, ptermoNode4);
        }
	nodeList.add(pexplogicafatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AElogicaFatorMaiorigualExpLogicaFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaFator pexplogicafatorNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorOuIgualQ tmaiorouigualqNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaiorouigualqNode3 = (TMaiorOuIgualQ)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexplogicafatorNode1 = new AElogicaFatorMaiorigualExpLogicaFator(pexpNode2, tmaiorouigualqNode3, ptermoNode4);
        }
	nodeList.add(pexplogicafatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AElogicaFatorMenorqExpLogicaFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaFator pexplogicafatorNode1;
        {
            // Block
        PExp pexpNode2;
        TMenorq tmenorqNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmenorqNode3 = (TMenorq)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexplogicafatorNode1 = new AElogicaFatorMenorqExpLogicaFator(pexpNode2, tmenorqNode3, ptermoNode4);
        }
	nodeList.add(pexplogicafatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AElogicaFatorMaiorqExpLogicaFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaFator pexplogicafatorNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorq tmaiorqNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaiorqNode3 = (TMaiorq)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexplogicafatorNode1 = new AElogicaFatorMaiorqExpLogicaFator(pexpNode2, tmaiorqNode3, ptermoNode4);
        }
	nodeList.add(pexplogicafatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AElogicaFatorIgualExpLogicaFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaFator pexplogicafatorNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexplogicafatorNode1 = new AElogicaFatorIgualExpLogicaFator(pexpNode2, tigualNode3, ptermoNode4);
        }
	nodeList.add(pexplogicafatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AElogicaFatorDiferenteExpLogicaFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogicaFator pexplogicafatorNode1;
        {
            // Block
        PExp pexpNode2;
        TDiferente tdiferenteNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tdiferenteNode3 = (TDiferente)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexplogicafatorNode1 = new AElogicaFatorDiferenteExpLogicaFator(pexpNode2, tdiferenteNode3, ptermoNode4);
        }
	nodeList.add(pexplogicafatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AExpExpOuElogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOuElogica pexpouelogicaNode1;
        {
            // Block
        PExp pexpNode2;
        pexpNode2 = (PExp)nodeArrayList1.get(0);

        pexpouelogicaNode1 = new AExpExpOuElogica(pexpNode2);
        }
	nodeList.add(pexpouelogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AElogicaExpOuElogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOuElogica pexpouelogicaNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);

        pexpouelogicaNode1 = new AElogicaExpOuElogica(pexplogicaNode2);
        }
	nodeList.add(pexpouelogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce ATerminal$Declaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclaracoes pdeclaracoesNode1;
        pdeclaracoesNode1 = (PDeclaracoes)nodeArrayList1.get(0);
	if(pdeclaracoesNode1 != null)
	{
	  listNode2.add(pdeclaracoesNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ANonTerminal$Declaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclaracoes pdeclaracoesNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclaracoesNode2 = (PDeclaracoes)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclaracoesNode2 != null)
	{
	  listNode3.add(pdeclaracoesNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce ATerminal$Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComandos pcomandosNode1;
        pcomandosNode1 = (PComandos)nodeArrayList1.get(0);
	if(pcomandosNode1 != null)
	{
	  listNode2.add(pcomandosNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ANonTerminal$Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComandos pcomandosNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandosNode2 = (PComandos)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandosNode2 != null)
	{
	  listNode3.add(pcomandosNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce ATerminal$VarVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVarVirg pvarvirgNode1;
        pvarvirgNode1 = (PVarVirg)nodeArrayList1.get(0);
	if(pvarvirgNode1 != null)
	{
	  listNode2.add(pvarvirgNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce ANonTerminal$VarVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVarVirg pvarvirgNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvarvirgNode2 = (PVarVirg)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvarvirgNode2 != null)
	{
	  listNode3.add(pvarvirgNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ATerminal$ExpVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpVirg pexpvirgNode1;
        pexpvirgNode1 = (PExpVirg)nodeArrayList1.get(0);
	if(pexpvirgNode1 != null)
	{
	  listNode2.add(pexpvirgNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ANonTerminal$ExpVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpVirg pexpvirgNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpvirgNode2 = (PExpVirg)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpvirgNode2 != null)
	{
	  listNode3.add(pexpvirgNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ATerminal$CasoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCasoComandos pcasocomandosNode1;
        pcasocomandosNode1 = (PCasoComandos)nodeArrayList1.get(0);
	if(pcasocomandosNode1 != null)
	{
	  listNode2.add(pcasocomandosNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ANonTerminal$CasoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCasoComandos pcasocomandosNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcasocomandosNode2 = (PCasoComandos)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcasocomandosNode2 != null)
	{
	  listNode3.add(pcasocomandosNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ATerminal$ComandoPontoVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComandoPontoVirg pcomandopontovirgNode1;
        pcomandopontovirgNode1 = (PComandoPontoVirg)nodeArrayList1.get(0);
	if(pcomandopontovirgNode1 != null)
	{
	  listNode2.add(pcomandopontovirgNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ANonTerminal$ComandoPontoVirg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComandoPontoVirg pcomandopontovirgNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandopontovirgNode2 = (PComandoPontoVirg)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandopontovirgNode2 != null)
	{
	  listNode3.add(pcomandopontovirgNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {31, SHIFT, 3}, },
			{{-1, ERROR, 2}, {63, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {1, SHIFT, 4}, },
			{{-1, REDUCE, 5}, {23, SHIFT, 5}, {24, SHIFT, 6}, {25, SHIFT, 7}, {26, SHIFT, 8}, {35, SHIFT, 9}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 8}, {31, SHIFT, 15}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 13}, {42, SHIFT, 28}, },
			{{-1, REDUCE, 4}, {23, SHIFT, 5}, {24, SHIFT, 6}, {25, SHIFT, 7}, {26, SHIFT, 8}, {35, SHIFT, 9}, },
			{{-1, ERROR, 15}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, },
			{{-1, ERROR, 16}, {45, SHIFT, 34}, },
			{{-1, ERROR, 17}, {45, SHIFT, 35}, },
			{{-1, ERROR, 18}, {31, SHIFT, 23}, },
			{{-1, ERROR, 19}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 20}, {45, SHIFT, 39}, },
			{{-1, ERROR, 21}, {45, SHIFT, 40}, },
			{{-1, ERROR, 22}, {45, SHIFT, 41}, },
			{{-1, REDUCE, 37}, {47, SHIFT, 42}, },
			{{-1, ERROR, 24}, {2, SHIFT, 43}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 26}, {62, SHIFT, 44}, },
			{{-1, REDUCE, 8}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 28}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 33}, {43, SHIFT, 49}, },
			{{-1, ERROR, 34}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 35}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 36}, {12, SHIFT, 62}, },
			{{-1, REDUCE, 80}, {15, SHIFT, 63}, },
			{{-1, ERROR, 38}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 39}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 40}, {31, SHIFT, 23}, },
			{{-1, ERROR, 41}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 42}, {33, SHIFT, 75}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 44}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 47}, {43, SHIFT, 77}, {44, SHIFT, 78}, },
			{{-1, ERROR, 48}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 51}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 52}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 55}, {51, SHIFT, 86}, {52, SHIFT, 87}, {56, SHIFT, 88}, {57, SHIFT, 89}, {58, SHIFT, 90}, {59, SHIFT, 91}, {60, SHIFT, 92}, {61, SHIFT, 93}, },
			{{-1, REDUCE, 55}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 58}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, {46, SHIFT, 99}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 61}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, {46, SHIFT, 100}, },
			{{-1, ERROR, 62}, {33, SHIFT, 101}, },
			{{-1, ERROR, 63}, {45, SHIFT, 102}, },
			{{-1, REDUCE, 81}, {15, SHIFT, 103}, },
			{{-1, REDUCE, 76}, {51, SHIFT, 86}, {52, SHIFT, 87}, {56, SHIFT, 88}, {57, SHIFT, 89}, {58, SHIFT, 90}, {59, SHIFT, 91}, {60, SHIFT, 92}, {61, SHIFT, 93}, },
			{{-1, REDUCE, 77}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, },
			{{-1, ERROR, 67}, {46, SHIFT, 104}, },
			{{-1, ERROR, 68}, {44, SHIFT, 78}, {46, SHIFT, 105}, },
			{{-1, ERROR, 69}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 76}, {44, SHIFT, 107}, {51, SHIFT, 86}, {52, SHIFT, 87}, {56, SHIFT, 88}, {57, SHIFT, 89}, {58, SHIFT, 90}, {59, SHIFT, 91}, {60, SHIFT, 92}, {61, SHIFT, 93}, },
			{{-1, REDUCE, 77}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, {44, SHIFT, 108}, },
			{{-1, ERROR, 73}, {46, SHIFT, 109}, },
			{{-1, ERROR, 74}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 75}, {48, SHIFT, 112}, },
			{{-1, ERROR, 76}, {43, SHIFT, 113}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 80}, {43, SHIFT, 114}, {44, SHIFT, 78}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 58}, {46, SHIFT, 115}, },
			{{-1, ERROR, 83}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, {46, SHIFT, 116}, },
			{{-1, ERROR, 84}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 86}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 87}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 88}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 89}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 90}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 91}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 92}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 93}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 94}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 95}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 84}, {52, SHIFT, 52}, },
			{{-1, ERROR, 96}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 97}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 98}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 99}, {4, SHIFT, 131}, },
			{{-1, ERROR, 100}, {8, SHIFT, 132}, },
			{{-1, ERROR, 101}, {11, SHIFT, 133}, {15, SHIFT, 134}, },
			{{-1, ERROR, 102}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 103}, {45, SHIFT, 136}, },
			{{-1, ERROR, 104}, {5, SHIFT, 137}, {17, SHIFT, 138}, {18, SHIFT, 139}, },
			{{-1, ERROR, 105}, {43, SHIFT, 144}, },
			{{-1, ERROR, 106}, {44, SHIFT, 78}, {46, SHIFT, 145}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 109}, {43, SHIFT, 146}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 111}, {46, SHIFT, 147}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 117}, {46, SHIFT, 115}, },
			{{-1, REDUCE, 53}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 54}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 73}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 72}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 70}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 71}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 74}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 75}, {53, SHIFT, 94}, {54, SHIFT, 95}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, ERROR, 131}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 132}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 133}, {33, SHIFT, 152}, },
			{{-1, ERROR, 134}, {33, SHIFT, 152}, },
			{{-1, ERROR, 135}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, {46, SHIFT, 155}, },
			{{-1, ERROR, 136}, {27, SHIFT, 50}, {31, SHIFT, 23}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, {45, SHIFT, 51}, {52, SHIFT, 52}, },
			{{-1, ERROR, 137}, {42, SHIFT, 157}, },
			{{-1, ERROR, 138}, {43, SHIFT, 158}, },
			{{-1, ERROR, 139}, {32, SHIFT, 30}, {33, SHIFT, 31}, {34, SHIFT, 32}, },
			{{-1, ERROR, 140}, {17, SHIFT, 160}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 142}, {5, SHIFT, 137}, {17, SHIFT, 161}, },
			{{-1, REDUCE, 51}, {18, SHIFT, 139}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 145}, {43, SHIFT, 164}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 147}, {43, SHIFT, 165}, },
			{{-1, REDUCE, 80}, {5, SHIFT, 166}, {6, SHIFT, 167}, },
			{{-1, ERROR, 149}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 80}, {9, SHIFT, 170}, },
			{{-1, ERROR, 151}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 153}, {15, SHIFT, 172}, },
			{{-1, ERROR, 154}, {8, SHIFT, 173}, },
			{{-1, ERROR, 155}, {43, SHIFT, 174}, },
			{{-1, ERROR, 156}, {28, SHIFT, 96}, {29, SHIFT, 97}, {30, SHIFT, 98}, {46, SHIFT, 175}, },
			{{-1, ERROR, 157}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 159}, {42, SHIFT, 178}, },
			{{-1, ERROR, 160}, {43, SHIFT, 179}, },
			{{-1, ERROR, 161}, {43, SHIFT, 180}, },
			{{-1, ERROR, 162}, {17, SHIFT, 181}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 166}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 167}, {43, SHIFT, 184}, },
			{{-1, ERROR, 168}, {6, SHIFT, 185}, },
			{{-1, REDUCE, 81}, {5, SHIFT, 166}, {6, SHIFT, 186}, },
			{{-1, ERROR, 170}, {43, SHIFT, 188}, },
			{{-1, REDUCE, 81}, {9, SHIFT, 189}, },
			{{-1, ERROR, 172}, {33, SHIFT, 190}, },
			{{-1, ERROR, 173}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 175}, {43, SHIFT, 195}, },
			{{-1, REDUCE, 80}, {17, REDUCE, 47}, },
			{{-1, ERROR, 177}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 178}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 181}, {43, SHIFT, 199}, },
			{{-1, REDUCE, 80}, {6, REDUCE, 45}, },
			{{-1, ERROR, 183}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 185}, {43, SHIFT, 201}, },
			{{-1, ERROR, 186}, {43, SHIFT, 202}, },
			{{-1, ERROR, 187}, {6, SHIFT, 203}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 189}, {43, SHIFT, 204}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 191}, {8, SHIFT, 205}, },
			{{-1, ERROR, 192}, {43, SHIFT, 206}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 194}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 81}, {17, REDUCE, 48}, },
			{{-1, REDUCE, 80}, {5, REDUCE, 49}, {17, REDUCE, 49}, {18, REDUCE, 49}, },
			{{-1, ERROR, 198}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 81}, {6, REDUCE, 46}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 203}, {43, SHIFT, 210}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 205}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, REDUCE, 52}, {13, SHIFT, 213}, },
			{{-1, ERROR, 207}, {43, SHIFT, 214}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 81}, {5, REDUCE, 50}, {17, REDUCE, 50}, {18, REDUCE, 50}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 80}, {13, SHIFT, 215}, },
			{{-1, ERROR, 212}, {3, SHIFT, 16}, {7, SHIFT, 17}, {10, SHIFT, 18}, {14, SHIFT, 19}, {16, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {31, SHIFT, 23}, },
			{{-1, ERROR, 213}, {43, SHIFT, 217}, },
			{{-1, REDUCE, 52}, {13, SHIFT, 219}, },
			{{-1, ERROR, 215}, {43, SHIFT, 220}, },
			{{-1, REDUCE, 81}, {13, SHIFT, 221}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 219}, {43, SHIFT, 217}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 221}, {43, SHIFT, 223}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 10}, {14, 29}, },
			{{-1, 11}, },
			{{-1, 12}, },
			{{-1, 24}, },
			{{-1, 25}, {19, 37}, {27, 45}, {38, 64}, {131, 148}, {132, 150}, {149, 169}, {151, 171}, {157, 176}, {166, 182}, {173, 192}, {177, 196}, {178, 197}, {183, 200}, {194, 207}, {198, 209}, {205, 211}, {212, 216}, },
			{{-1, 46}, {48, 79}, {69, 79}, },
			{{-1, 70}, {74, 110}, },
			{{-1, 13}, },
			{{-1, 53}, {12, 26}, {18, 36}, {19, 26}, {27, 26}, {28, 47}, {38, 26}, {40, 68}, {48, 80}, {69, 106}, {131, 26}, {132, 26}, {149, 26}, {151, 26}, {157, 26}, {166, 26}, {173, 26}, {177, 26}, {178, 26}, {183, 26}, {194, 26}, {198, 26}, {205, 26}, {212, 26}, },
			{{-1, 54}, {15, 33}, {139, 159}, },
			{{-1, 153}, {134, 154}, },
			{{-1, 191}, },
			{{-1, 218}, {219, 222}, },
			{{-1, 168}, {169, 187}, },
			{{-1, 140}, {142, 162}, },
			{{-1, 141}, {143, 163}, },
			{{-1, 142}, },
			{{-1, 193}, {194, 208}, },
			{{-1, 55}, {39, 65}, {41, 71}, {44, 65}, {74, 71}, },
			{{-1, 56}, {86, 118}, {87, 119}, {88, 120}, {89, 121}, {90, 122}, {91, 123}, {92, 124}, {93, 125}, },
			{{-1, 57}, {51, 82}, {52, 85}, {84, 117}, {94, 126}, {95, 127}, },
			{{-1, 66}, {34, 58}, {35, 61}, {41, 72}, {51, 83}, {74, 72}, {102, 135}, {136, 156}, },
			{{-1, 59}, {50, 81}, {96, 128}, {97, 129}, {98, 130}, },
			{{-1, 60}, },
			{{-1, 67}, {41, 73}, {44, 76}, {74, 111}, },
			{{-1, 14}, },
			{{-1, 27}, {19, 38}, {131, 149}, {132, 151}, {157, 177}, {166, 183}, {178, 198}, {205, 212}, },
			{{-1, 48}, {40, 69}, },
			{{-1, 74}, },
			{{-1, 143}, },
			{{-1, 194}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'fim.', 'se', 'enquanto', 'para', 'repita', 'avalie', 'leia', 'escreva', 'inteiro', 'real', 'booleano', 'const', id, caractere",
			"expecting: ':'",
			"expecting: 'fim.', 'se', 'enquanto', 'para', 'repita', 'avalie', 'leia', 'escreva', id",
			"expecting: string, num, numreal",
			"expecting: '('",
			"expecting: 'se', 'enquanto', 'para', 'repita', 'avalie', 'leia', 'escreva', id",
			"expecting: 'de', 'e', 'ou', 'xor', ';', ',', ')', '[', '+', '-', '*', '/', '>', '<', '<=', '>=', '=', '<>', ':='",
			"expecting: 'fim.'",
			"expecting: ':='",
			"expecting: 'e', 'ou', 'xor', ':', ';', ',', ')', '+', '-', '*', '/', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: ';'",
			"expecting: 'nao', id, string, num, numreal, '(', '-'",
			"expecting: 'de'",
			"expecting: 'se', 'enquanto', 'para', 'repita', 'ate', 'avalie', 'leia', 'escreva', id",
			"expecting: num",
			"expecting: ';', ','",
			"expecting: id, string, num, numreal, '(', '-'",
			"expecting: 'e', 'ou', 'xor', ';', ',', ')', '+', '-', '*', '/', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: '+', '-', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: ';', ',', ')', '+', '-', '*', '/', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: 'e', 'ou', 'xor', ')'",
			"expecting: 'e', 'ou', 'xor', ';', ',', ')'",
			"expecting: ';', ')', '+', '-', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: 'e', 'ou', 'xor', ';', ')'",
			"expecting: ')'",
			"expecting: ',', ')'",
			"expecting: ',', ')', '+', '-', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: 'e', 'ou', 'xor', ',', ')'",
			"expecting: ']'",
			"expecting: ')', '+', '-', '*', '/', '>', '<', '<=', '>=', '=', '<>'",
			"expecting: 'entao'",
			"expecting: 'faca'",
			"expecting: 'passo', 'ate'",
			"expecting: 'senao', 'fim avalie', 'caso'",
			"expecting: 'de', 'e', 'ou', 'xor', ';', ',', ')', '+', '-', '*', '/', '>', '<', '<=', '>=', '=', '<>', ':='",
			"expecting: 'fim.', 'se', 'senao', 'fim se', 'enquanto', 'fim enquanto', 'para', 'fim para', 'repita', 'ate', 'avalie', 'fim avalie', 'caso', 'leia', 'escreva', id, ';'",
			"expecting: 'e', 'ou', 'xor', ';', ',', ')', '*', '/'",
			"expecting: 'fim avalie'",
			"expecting: 'senao', 'fim avalie'",
			"expecting: 'se', 'senao', 'fim se', 'enquanto', 'para', 'repita', 'avalie', 'leia', 'escreva', id",
			"expecting: 'se', 'enquanto', 'fim enquanto', 'para', 'repita', 'avalie', 'leia', 'escreva', id",
			"expecting: 'faca', 'ate'",
			"expecting: 'ate'",
			"expecting: 'fim se'",
			"expecting: 'se', 'enquanto', 'para', 'repita', 'avalie', 'fim avalie', 'leia', 'escreva', id",
			"expecting: 'se', 'fim se', 'enquanto', 'para', 'repita', 'avalie', 'leia', 'escreva', id",
			"expecting: 'se', 'senao', 'enquanto', 'para', 'repita', 'avalie', 'fim avalie', 'caso', 'leia', 'escreva', id",
			"expecting: 'se', 'enquanto', 'para', 'fim para', 'repita', 'avalie', 'leia', 'escreva', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 5, 5, 1, 5, 4, 6, 6, 5, 4, 7, 8, 8, 1, 9, 8, 8, 8, 10, 11, 6, 12, 6, 1, 4, 13, 13, 13, 14, 15, 15, 16, 17, 9, 15, 1, 15, 18, 2, 15, 6, 1, 19, 1, 4, 20, 15, 20, 21, 21, 22, 23, 21, 24, 25, 25, 24, 18, 8, 17, 26, 27, 28, 29, 1, 15, 30, 31, 28, 15, 32, 14, 4, 1, 1, 19, 25, 33, 24, 20, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 34, 35, 36, 15, 8, 37, 14, 29, 15, 15, 14, 15, 28, 38, 39, 4, 21, 25, 28, 23, 23, 40, 40, 40, 40, 40, 40, 21, 21, 25, 25, 25, 9, 9, 18, 18, 24, 15, 5, 14, 7, 41, 37, 42, 37, 39, 14, 39, 14, 43, 9, 44, 9, 45, 46, 35, 14, 24, 9, 39, 5, 14, 14, 41, 37, 39, 39, 9, 14, 47, 43, 14, 44, 18, 9, 39, 14, 48, 9, 9, 39, 39, 14, 49, 9, 39, 14, 14, 47, 39, 14, 35, 35, 14, 9, 9, 39, 48, 50, 9, 39, 49, 39, 39, 14, 39, 9, 51, 14, 9, 50, 39, 51, 9, 14, 51, 14, 51, 39, 39, 14, 39, 14, 39, 39, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
