/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores.lexer;

import java.io.*;
import compiladores.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPrograma(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdadeiro(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleano(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNum(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumreal(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(text, line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBloco(line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioCorpo(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioFimBloco(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEstrela(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioLinha(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoEVirg(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirg(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAParentese(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFParentese(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAColchete(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFColchete(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAspasSimples(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAspasDuplas(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSublinhado(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorOuIgualQ(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorOuIgualQ(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtrib(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {47, 47, 14}, {48, 57, 15}, {58, 58, 16}, {59, 59, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {65, 90, 21}, {91, 91, 22}, {93, 93, 23}, {95, 95, 24}, {97, 97, 25}, {98, 98, 26}, {99, 99, 27}, {100, 100, 28}, {101, 101, 29}, {102, 102, 30}, {103, 104, 28}, {105, 105, 31}, {106, 107, 28}, {108, 108, 32}, {109, 109, 28}, {110, 110, 33}, {111, 111, 34}, {112, 112, 35}, {113, 113, 28}, {114, 114, 36}, {115, 115, 37}, {116, 117, 28}, {118, 118, 38}, {119, 122, 28}, },
            {{9, 32, -2}, },
            {{9, 10, -2}, {13, 13, 39}, {32, 32, 4}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {},
            {{48, 57, 40}, {65, 90, 41}, {97, 122, 42}, },
            {},
            {},
            {{47, 47, 43}, },
            {},
            {},
            {},
            {{42, 42, 44}, {47, 47, 45}, },
            {{44, 44, 46}, {48, 57, 15}, },
            {},
            {},
            {{45, 45, 47}, {61, 61, 48}, {62, 62, 49}, },
            {},
            {{61, 61, 50}, },
            {{48, 57, 51}, {65, 90, 52}, {95, 95, 53}, {97, 122, 54}, },
            {},
            {},
            {{48, 57, 51}, {65, 90, 55}, {95, 95, 53}, {97, 122, 56}, },
            {{48, 95, -23}, {97, 117, 54}, {118, 118, 57}, {119, 122, 54}, },
            {{48, 95, -23}, {97, 110, 54}, {111, 111, 58}, {112, 122, 54}, },
            {{48, 95, -23}, {97, 97, 59}, {98, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 109, 54}, {110, 110, 60}, {111, 114, 54}, {115, 115, 61}, {116, 122, 54}, },
            {{48, 95, -23}, {97, 97, 62}, {98, 104, 54}, {105, 105, 63}, {106, 122, 54}, },
            {{48, 109, -31}, {110, 110, 64}, {111, 122, 54}, },
            {{48, 95, -23}, {97, 100, 54}, {101, 101, 65}, {102, 122, 54}, },
            {{48, 95, -23}, {97, 97, 66}, {98, 122, 54}, },
            {{48, 95, -23}, {97, 116, 54}, {117, 117, 67}, {118, 122, 54}, },
            {{48, 95, -23}, {97, 97, 68}, {98, 113, 54}, {114, 114, 69}, {115, 122, 54}, },
            {{48, 100, -34}, {101, 101, 70}, {102, 122, 54}, },
            {{48, 100, -34}, {101, 101, 71}, {102, 122, 54}, },
            {{48, 100, -34}, {101, 101, 72}, {102, 122, 54}, },
            {{9, 32, -2}, },
            {{39, 39, 73}, },
            {{39, 39, 74}, },
            {{39, 39, 75}, },
            {},
            {},
            {{32, 255, 76}, },
            {{48, 57, 77}, },
            {},
            {},
            {},
            {},
            {{48, 122, -26}, },
            {{48, 122, -23}, },
            {{48, 122, -26}, },
            {{48, 122, -23}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 95, -23}, {97, 97, 78}, {98, 122, 54}, },
            {{48, 110, -28}, {111, 111, 79}, {112, 122, 54}, },
            {{48, 95, -23}, {97, 113, 54}, {114, 114, 80}, {115, 115, 81}, {116, 122, 54}, },
            {{48, 95, -23}, {97, 112, 54}, {113, 113, 82}, {114, 122, 54}, },
            {{48, 95, -23}, {97, 98, 54}, {99, 99, 83}, {100, 122, 54}, },
            {{48, 95, -23}, {97, 107, 54}, {108, 108, 84}, {109, 122, 54}, },
            {{48, 95, -23}, {97, 108, 54}, {109, 109, 85}, {110, 122, 54}, },
            {{48, 95, -23}, {97, 104, 54}, {105, 105, 86}, {106, 115, 54}, {116, 116, 87}, {117, 122, 54}, },
            {{48, 104, -66}, {105, 105, 88}, {106, 122, 54}, },
            {{48, 110, -28}, {111, 111, 89}, {112, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 113, -61}, {114, 114, 90}, {115, 122, 54}, },
            {{48, 110, -28}, {111, 111, 91}, {112, 122, 54}, },
            {{48, 95, -23}, {97, 97, 92}, {98, 122, 54}, },
            {{48, 109, -31}, {110, 110, 93}, {111, 122, 54}, },
            {{48, 113, -61}, {114, 114, 94}, {115, 122, 54}, },
            {},
            {},
            {},
            {{32, 255, 76}, },
            {{48, 57, 77}, },
            {{48, 107, -64}, {108, 108, 95}, {109, 122, 54}, },
            {{48, 107, -64}, {108, 108, 96}, {109, 122, 54}, },
            {{48, 95, -23}, {97, 97, 97}, {98, 122, 54}, },
            {{48, 110, -28}, {111, 111, 98}, {112, 122, 54}, },
            {{48, 116, -36}, {117, 117, 99}, {118, 122, 54}, },
            {{48, 113, -61}, {114, 114, 100}, {115, 122, 54}, },
            {{48, 95, -23}, {97, 114, 54}, {115, 115, 101}, {116, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 98, -63}, {99, 99, 102}, {100, 122, 54}, },
            {{48, 100, -34}, {101, 101, 103}, {102, 122, 54}, },
            {{48, 95, -23}, {97, 97, 104}, {98, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 105}, {98, 122, 54}, },
            {{48, 95, -23}, {97, 102, 54}, {103, 103, 106}, {104, 122, 54}, },
            {{48, 107, -64}, {108, 108, 107}, {109, 122, 54}, },
            {{48, 95, -23}, {97, 97, 108}, {98, 122, 54}, },
            {{48, 95, -23}, {97, 99, 54}, {100, 100, 109}, {101, 122, 54}, },
            {{48, 104, -66}, {105, 105, 110}, {106, 122, 54}, },
            {{48, 100, -34}, {101, 101, 111}, {102, 122, 54}, },
            {{48, 98, -63}, {99, 99, 112}, {100, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 113}, {98, 122, 54}, },
            {{48, 100, -34}, {101, 101, 114}, {102, 122, 54}, },
            {{48, 110, -28}, {111, 111, 115}, {112, 122, 54}, },
            {{48, 104, -66}, {105, 105, 116}, {106, 122, 54}, },
            {{48, 104, -66}, {105, 105, 117}, {106, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 113, -61}, {114, 114, 118}, {115, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 119}, {112, 122, 54}, },
            {{48, 95, -23}, {97, 97, 120}, {98, 122, 54}, },
            {{48, 100, -34}, {101, 101, 121}, {102, 122, 54}, },
            {{48, 95, -23}, {97, 97, 122}, {98, 122, 54}, },
            {{48, 95, -23}, {97, 115, 54}, {116, 116, 123}, {117, 122, 54}, },
            {{48, 109, -31}, {110, 110, 124}, {111, 122, 54}, },
            {{48, 117, -27}, {118, 118, 125}, {119, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 126}, {112, 122, 54}, },
            {{48, 113, -61}, {114, 114, 127}, {115, 122, 54}, },
            {{48, 95, -23}, {97, 97, 128}, {98, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 99, -96}, {100, 100, 129}, {101, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 130}, {111, 122, 54}, },
            {{48, 100, -34}, {101, 101, 131}, {102, 122, 54}, },
            {{48, 115, -114}, {116, 116, 132}, {117, 122, 54}, },
            {{48, 95, -23}, {97, 97, 133}, {98, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 134}, {112, 122, 54}, },
            {{48, 108, -65}, {109, 109, 135}, {110, 122, 54}, },
            {{48, 100, -34}, {101, 101, 136}, {102, 122, 54}, },
            {{48, 110, -28}, {111, 111, 137}, {112, 122, 54}, },
            {{48, 113, -61}, {114, 114, 138}, {115, 122, 54}, },
            {{48, 110, -28}, {111, 111, 139}, {112, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 140}, {98, 122, 54}, },
            {{48, 104, -66}, {105, 105, 141}, {106, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 100, -34}, {101, 101, 142}, {102, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 113, -61}, {114, 114, 143}, {115, 122, 54}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 144}, {112, 122, 54}, },
            {{48, 122, -23}, },
        }
        { // COMENTARIO
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 33, 1}, {34, 34, 6}, {35, 36, 1}, {37, 37, 7}, {38, 38, 1}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 1}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 64, 1}, {65, 90, 22}, {91, 91, 23}, {92, 92, 1}, {93, 93, 24}, {94, 94, 1}, {95, 95, 25}, {96, 96, 1}, {97, 97, 26}, {98, 98, 27}, {99, 99, 28}, {100, 100, 29}, {101, 101, 30}, {102, 102, 31}, {103, 104, 29}, {105, 105, 32}, {106, 107, 29}, {108, 108, 33}, {109, 109, 29}, {110, 110, 34}, {111, 111, 35}, {112, 112, 36}, {113, 113, 29}, {114, 114, 37}, {115, 115, 38}, {116, 117, 29}, {118, 118, 39}, {119, 122, 29}, {123, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{0, 32, -2}, {33, 41, 1}, {43, 65535, -3}, },
            {{0, 12, -2}, {13, 13, 40}, {14, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 57, 41}, {58, 64, 1}, {65, 90, 42}, {91, 96, 1}, {97, 122, 43}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{47, 47, 44}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{42, 42, 45}, },
            {{0, 41, 1}, {43, 43, 1}, {44, 44, 46}, {45, 46, 1}, {48, 57, 16}, {58, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 41, 1}, {43, 44, 1}, {45, 45, 47}, {46, 46, 1}, {48, 60, 1}, {61, 61, 48}, {62, 62, 49}, {63, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 50}, {62, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 51}, {58, 64, 1}, {65, 90, 52}, {91, 94, 1}, {95, 95, 53}, {96, 96, 1}, {97, 122, 54}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 64, -24}, {65, 90, 55}, {91, 96, -24}, {97, 122, 56}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 117, 54}, {118, 118, 57}, {119, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 110, 54}, {111, 111, 58}, {112, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 59}, {98, 122, 54}, {123, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 109, 54}, {110, 110, 60}, {111, 114, 54}, {115, 115, 61}, {116, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 62}, {98, 104, 54}, {105, 105, 63}, {106, 122, 54}, {123, 65535, 1}, },
            {{0, 109, -32}, {110, 110, 64}, {111, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 100, 54}, {101, 101, 65}, {102, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 66}, {98, 65535, -30}, },
            {{0, 96, -24}, {97, 116, 54}, {117, 117, 67}, {118, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 68}, {98, 113, 54}, {114, 114, 69}, {115, 122, 54}, {123, 65535, 1}, },
            {{0, 100, -35}, {101, 101, 70}, {102, 65535, -35}, },
            {{0, 100, -35}, {101, 101, 71}, {102, 65535, -35}, },
            {{0, 100, -35}, {101, 101, 72}, {102, 65535, -35}, },
            {{0, 65535, -4}, },
            {{0, 38, 1}, {39, 39, 73}, {40, 41, 1}, {43, 65535, -3}, },
            {{0, 38, 1}, {39, 39, 74}, {40, 65535, -43}, },
            {{0, 38, 1}, {39, 39, 75}, {40, 65535, -43}, },
            {},
            {},
            {{0, 46, -3}, {48, 57, 76}, {58, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -27}, },
            {{0, 65535, -24}, },
            {{0, 65535, -27}, },
            {{0, 65535, -24}, },
            {{0, 65535, -27}, },
            {{0, 65535, -27}, },
            {{0, 96, -24}, {97, 97, 77}, {98, 65535, -30}, },
            {{0, 110, -29}, {111, 111, 78}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 113, 54}, {114, 114, 79}, {115, 115, 80}, {116, 65535, -32}, },
            {{0, 96, -24}, {97, 112, 54}, {113, 113, 81}, {114, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 98, 54}, {99, 99, 82}, {100, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 107, 54}, {108, 108, 83}, {109, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 108, 54}, {109, 109, 84}, {110, 122, 54}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 104, 54}, {105, 105, 85}, {106, 115, 54}, {116, 116, 86}, {117, 122, 54}, {123, 65535, 1}, },
            {{0, 104, -66}, {105, 105, 87}, {106, 65535, -33}, },
            {{0, 110, -29}, {111, 111, 88}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
            {{0, 113, -61}, {114, 114, 89}, {115, 65535, -38}, },
            {{0, 110, -29}, {111, 111, 90}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 97, 91}, {98, 65535, -30}, },
            {{0, 109, -32}, {110, 110, 92}, {111, 65535, -34}, },
            {{0, 113, -61}, {114, 114, 93}, {115, 65535, -38}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -48}, },
            {{0, 107, -64}, {108, 108, 94}, {109, 65535, -64}, },
            {{0, 107, -64}, {108, 108, 95}, {109, 65535, -64}, },
            {{0, 96, -24}, {97, 97, 96}, {98, 65535, -30}, },
            {{0, 110, -29}, {111, 111, 97}, {112, 65535, -29}, },
            {{0, 116, -37}, {117, 117, 98}, {118, 65535, -37}, },
            {{0, 113, -61}, {114, 114, 99}, {115, 65535, -38}, },
            {{0, 96, -24}, {97, 114, 54}, {115, 115, 100}, {116, 65535, -32}, },
            {{0, 65535, -24}, },
            {{0, 98, -63}, {99, 99, 101}, {100, 65535, -63}, },
            {{0, 100, -35}, {101, 101, 102}, {102, 65535, -35}, },
            {{0, 96, -24}, {97, 97, 103}, {98, 65535, -30}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 104}, {98, 65535, -30}, },
            {{0, 96, -24}, {97, 102, 54}, {103, 103, 105}, {104, 122, 54}, {123, 65535, 1}, },
            {{0, 107, -64}, {108, 108, 106}, {109, 65535, -64}, },
            {{0, 96, -24}, {97, 97, 107}, {98, 65535, -30}, },
            {{0, 96, -24}, {97, 99, 54}, {100, 100, 108}, {101, 122, 54}, {123, 65535, 1}, },
            {{0, 104, -66}, {105, 105, 109}, {106, 65535, -33}, },
            {{0, 100, -35}, {101, 101, 110}, {102, 65535, -35}, },
            {{0, 98, -63}, {99, 99, 111}, {100, 65535, -63}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 112}, {98, 65535, -30}, },
            {{0, 100, -35}, {101, 101, 113}, {102, 65535, -35}, },
            {{0, 110, -29}, {111, 111, 114}, {112, 65535, -29}, },
            {{0, 104, -66}, {105, 105, 115}, {106, 65535, -33}, },
            {{0, 104, -66}, {105, 105, 116}, {106, 65535, -33}, },
            {{0, 65535, -24}, },
            {{0, 65535, -24}, },
            {{0, 113, -61}, {114, 114, 117}, {115, 65535, -38}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 118}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 97, 119}, {98, 65535, -30}, },
            {{0, 100, -35}, {101, 101, 120}, {102, 65535, -35}, },
            {{0, 96, -24}, {97, 97, 121}, {98, 65535, -30}, },
            {{0, 96, -24}, {97, 115, 54}, {116, 116, 122}, {117, 65535, -66}, },
            {{0, 109, -32}, {110, 110, 123}, {111, 65535, -34}, },
            {{0, 117, -28}, {118, 118, 124}, {119, 65535, -28}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 125}, {112, 65535, -29}, },
            {{0, 113, -61}, {114, 114, 126}, {115, 65535, -38}, },
            {{0, 96, -24}, {97, 97, 127}, {98, 65535, -30}, },
            {{0, 65535, -24}, },
            {{0, 99, -95}, {100, 100, 128}, {101, 65535, -95}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 129}, {111, 65535, -34}, },
            {{0, 100, -35}, {101, 101, 130}, {102, 65535, -35}, },
            {{0, 115, -113}, {116, 116, 131}, {117, 65535, -66}, },
            {{0, 96, -24}, {97, 97, 132}, {98, 65535, -30}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 133}, {112, 65535, -29}, },
            {{0, 108, -65}, {109, 109, 134}, {110, 65535, -65}, },
            {{0, 100, -35}, {101, 101, 135}, {102, 65535, -35}, },
            {{0, 110, -29}, {111, 111, 136}, {112, 65535, -29}, },
            {{0, 113, -61}, {114, 114, 137}, {115, 65535, -38}, },
            {{0, 110, -29}, {111, 111, 138}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 139}, {98, 65535, -30}, },
            {{0, 104, -66}, {105, 105, 140}, {106, 65535, -33}, },
            {{0, 65535, -24}, },
            {{0, 100, -35}, {101, 101, 141}, {102, 65535, -35}, },
            {{0, 65535, -24}, },
            {{0, 65535, -24}, },
            {{0, 113, -61}, {114, 114, 142}, {115, 65535, -38}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 143}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {21, 24, 24, 24, 24, 39, 45, 38, 34, 35, 43, 41, 33, 42, 44, 21, 31, 32, 47, 50, 46, 20, 36, 37, 20, 20, 20, 20, 20, 18, 20, 20, 20, 20, 20, 20, 20, 20, 20, 24, -1, -1, -1, 27, 25, 30, -1, 52, 48, 51, 49, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 20, 20, 20, 3, 20, 23, 23, 23, 30, 22, 20, 20, 20, 20, 20, 20, 20, 2, 20, 20, 20, 17, 20, 20, 20, 20, 20, 20, 20, 20, 8, 20, 20, 20, 20, 20, 11, 6, 20, 14, 20, 20, 20, 20, 20, 20, 20, 10, 20, 20, 20, 4, 20, 7, 20, 20, 20, 20, 1, 20, 20, 20, 20, 20, 20, 12, 13, 20, 20, 15, 20, 5, 0, 20, 16, 20, 9, },
        // COMENTARIO
        {21, 26, 24, 24, 24, 24, 26, 26, 26, 26, 26, 28, 26, 26, 26, 29, 21, 26, 26, 26, 26, 26, 20, 26, 26, 20, 20, 20, 20, 20, 18, 20, 20, 20, 20, 20, 20, 20, 20, 20, 24, 26, 26, 26, 27, 25, 26, 26, 26, 26, 26, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 19, 20, 20, 20, 3, 20, 23, 23, 23, 22, 20, 20, 20, 20, 20, 20, 20, 2, 20, 20, 20, 17, 20, 20, 20, 20, 20, 20, 20, 20, 8, 20, 20, 20, 20, 20, 11, 6, 20, 14, 20, 20, 20, 20, 20, 20, 20, 10, 20, 20, 20, 4, 20, 7, 20, 20, 20, 20, 1, 20, 20, 20, 20, 20, 20, 12, 13, 20, 20, 15, 20, 5, 0, 20, 16, 20, 9, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMENTARIO = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
