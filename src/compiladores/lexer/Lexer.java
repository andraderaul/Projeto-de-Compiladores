/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiladores.lexer;

import java.io.*;
import compiladores.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                                case 0: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMENTARIO; break;
                            }
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPrograma(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimSe(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaca(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimEnquanto(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPasso(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDe(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPara(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRepita(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAte(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimAvalie(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdadeiro(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleano(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNum(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumreal(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBloco(line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioCorpo(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioFimBloco(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEstrela(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioLinha(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoEVirg(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirg(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAParentese(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFParentese(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAColchete(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFColchete(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAspasDuplas(line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSublinhado(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorOuIgualQ(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorOuIgualQ(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtrib(line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {34, 34, 5}, {37, 37, 6}, {39, 39, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {47, 47, 14}, {48, 57, 15}, {58, 58, 16}, {59, 59, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {65, 90, 21}, {91, 91, 22}, {93, 93, 23}, {95, 95, 24}, {97, 97, 25}, {98, 98, 26}, {99, 99, 27}, {100, 100, 28}, {101, 101, 29}, {102, 102, 30}, {103, 104, 31}, {105, 105, 32}, {106, 107, 31}, {108, 108, 33}, {109, 109, 31}, {110, 110, 34}, {111, 111, 35}, {112, 112, 36}, {113, 113, 31}, {114, 114, 37}, {115, 115, 38}, {116, 117, 31}, {118, 118, 39}, {119, 119, 31}, {120, 120, 40}, {121, 122, 31}, },
            {{9, 32, -2}, },
            {{9, 10, -2}, {13, 13, 41}, {32, 32, 4}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {},
            {{0, 9, 42}, {11, 38, 42}, {39, 39, 43}, {40, 47, 42}, {48, 57, 44}, {58, 64, 42}, {65, 90, 45}, {91, 96, 42}, {97, 122, 46}, {123, 65535, 42}, },
            {},
            {},
            {{47, 47, 47}, },
            {},
            {},
            {},
            {{42, 42, 48}, {47, 47, 49}, },
            {{44, 44, 50}, {48, 57, 15}, },
            {{61, 61, 51}, },
            {},
            {{61, 61, 52}, {62, 62, 53}, },
            {},
            {{61, 61, 54}, },
            {{48, 57, 55}, {65, 90, 56}, {95, 95, 57}, {97, 122, 58}, },
            {},
            {},
            {{48, 57, 55}, {65, 90, 59}, {95, 95, 57}, {97, 122, 60}, },
            {{48, 95, -23}, {97, 115, 58}, {116, 116, 61}, {117, 117, 58}, {118, 118, 62}, {119, 122, 58}, },
            {{48, 95, -23}, {97, 110, 58}, {111, 111, 63}, {112, 122, 58}, },
            {{48, 95, -23}, {97, 97, 64}, {98, 110, 58}, {111, 111, 65}, {112, 122, 58}, },
            {{48, 95, -23}, {97, 100, 58}, {101, 101, 66}, {102, 122, 58}, },
            {{48, 95, -23}, {97, 109, 58}, {110, 110, 67}, {111, 114, 58}, {115, 115, 68}, {116, 122, 58}, },
            {{48, 95, -23}, {97, 97, 69}, {98, 104, 58}, {105, 105, 70}, {106, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 71}, {111, 122, 58}, },
            {{48, 100, -30}, {101, 101, 72}, {102, 122, 58}, },
            {{48, 95, -23}, {97, 97, 73}, {98, 122, 58}, },
            {{48, 95, -23}, {97, 116, 58}, {117, 117, 74}, {118, 122, 58}, },
            {{48, 95, -23}, {97, 97, 75}, {98, 113, 58}, {114, 114, 76}, {115, 122, 58}, },
            {{48, 100, -30}, {101, 101, 77}, {102, 122, 58}, },
            {{48, 100, -30}, {101, 101, 78}, {102, 122, 58}, },
            {{48, 100, -30}, {101, 101, 79}, {102, 122, 58}, },
            {{48, 110, -28}, {111, 111, 80}, {112, 122, 58}, },
            {{9, 32, -2}, },
            {{0, 39, -9}, {40, 65535, 42}, },
            {},
            {{0, 38, -9}, {39, 39, 81}, {40, 65535, 42}, },
            {{0, 38, -9}, {39, 39, 82}, {40, 65535, 42}, },
            {{0, 38, -9}, {39, 39, 83}, {40, 65535, 42}, },
            {},
            {},
            {{32, 255, 84}, },
            {{48, 57, 85}, },
            {},
            {},
            {},
            {},
            {{48, 122, -26}, },
            {{48, 122, -23}, },
            {{48, 122, -26}, },
            {{48, 122, -23}, },
            {{48, 122, -26}, },
            {{48, 122, -26}, },
            {{48, 100, -30}, {101, 101, 86}, {102, 122, 58}, },
            {{48, 95, -23}, {97, 97, 87}, {98, 122, 58}, },
            {{48, 110, -28}, {111, 111, 88}, {112, 122, 58}, },
            {{48, 95, -23}, {97, 114, 58}, {115, 115, 89}, {116, 122, 58}, },
            {{48, 109, -31}, {110, 110, 90}, {111, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 112, 58}, {113, 113, 91}, {114, 115, 58}, {116, 116, 92}, {117, 122, 58}, },
            {{48, 95, -23}, {97, 98, 58}, {99, 99, 93}, {100, 122, 58}, },
            {{48, 98, -70}, {99, 99, 94}, {100, 107, 58}, {108, 108, 95}, {109, 122, 58}, },
            {{48, 95, -23}, {97, 108, 58}, {109, 109, 96}, {110, 122, 58}, },
            {{48, 95, -23}, {97, 104, 58}, {105, 105, 97}, {106, 115, 58}, {116, 116, 98}, {117, 122, 58}, },
            {{48, 104, -73}, {105, 105, 99}, {106, 122, 58}, },
            {{48, 110, -28}, {111, 111, 100}, {112, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 113, 58}, {114, 114, 101}, {115, 115, 102}, {116, 122, 58}, },
            {{48, 110, -28}, {111, 111, 103}, {112, 122, 58}, },
            {{48, 95, -23}, {97, 97, 104}, {98, 111, 58}, {112, 112, 105}, {113, 122, 58}, },
            {{48, 109, -31}, {110, 110, 106}, {111, 122, 58}, },
            {{48, 113, -77}, {114, 114, 107}, {115, 122, 58}, },
            {{48, 113, -77}, {114, 114, 108}, {115, 122, 58}, },
            {},
            {},
            {},
            {{32, 255, 84}, },
            {{48, 57, 85}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 107, 58}, {108, 108, 109}, {109, 122, 58}, },
            {{48, 107, -89}, {108, 108, 110}, {109, 122, 58}, },
            {{48, 110, -28}, {111, 111, 111}, {112, 122, 58}, },
            {{48, 114, -66}, {115, 115, 112}, {116, 122, 58}, },
            {{48, 116, -37}, {117, 117, 113}, {118, 122, 58}, },
            {{48, 95, -23}, {97, 97, 114}, {98, 122, 58}, },
            {{48, 113, -77}, {114, 114, 115}, {115, 122, 58}, },
            {{48, 95, -23}, {97, 97, 116}, {98, 122, 58}, },
            {{48, 114, -66}, {115, 115, 117}, {116, 122, 58}, },
            {{32, 32, 118}, {46, 46, 119}, {48, 122, -23}, },
            {{48, 98, -70}, {99, 99, 120}, {100, 122, 58}, },
            {{48, 100, -30}, {101, 101, 121}, {102, 122, 58}, },
            {{48, 95, -23}, {97, 97, 122}, {98, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 123}, {98, 122, 58}, },
            {{48, 114, -66}, {115, 115, 124}, {116, 122, 58}, },
            {{48, 95, -23}, {97, 102, 58}, {103, 103, 125}, {104, 122, 58}, },
            {{48, 107, -89}, {108, 108, 126}, {109, 122, 58}, },
            {{48, 104, -73}, {105, 105, 127}, {106, 122, 58}, },
            {{48, 95, -23}, {97, 97, 128}, {98, 122, 58}, },
            {{48, 95, -23}, {97, 99, 58}, {100, 100, 129}, {101, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 104, -73}, {105, 105, 130}, {106, 122, 58}, },
            {{48, 100, -30}, {101, 101, 131}, {102, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 115, -27}, {116, 116, 132}, {117, 122, 58}, },
            {{48, 95, -23}, {97, 97, 133}, {98, 122, 58}, },
            {{48, 110, -28}, {111, 111, 134}, {112, 122, 58}, },
            {{48, 100, -30}, {101, 101, 135}, {102, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 136}, {112, 122, 58}, },
            {{97, 97, 137}, {101, 101, 138}, {112, 112, 139}, {115, 115, 140}, },
            {},
            {{48, 104, -73}, {105, 105, 141}, {106, 122, 58}, },
            {{48, 104, -73}, {105, 105, 142}, {106, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 143}, {112, 122, 58}, },
            {{48, 113, -77}, {114, 114, 144}, {115, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 115, -27}, {116, 116, 145}, {117, 122, 58}, },
            {{48, 110, -28}, {111, 111, 146}, {112, 122, 58}, },
            {{48, 95, -23}, {97, 97, 147}, {98, 122, 58}, },
            {{48, 100, -30}, {101, 101, 148}, {102, 122, 58}, },
            {{48, 95, -23}, {97, 97, 149}, {98, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 150}, {111, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 117, 58}, {118, 118, 151}, {119, 122, 58}, },
            {{48, 122, -23}, },
            {{118, 118, 152}, },
            {{110, 110, 153}, },
            {{97, 97, 154}, },
            {{101, 101, 155}, },
            {{48, 110, -28}, {111, 111, 156}, {112, 122, 58}, },
            {{48, 113, -77}, {114, 114, 157}, {115, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 158}, {98, 122, 58}, },
            {{48, 95, -23}, {97, 97, 159}, {98, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 99, -109}, {100, 100, 160}, {101, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 109, -31}, {110, 110, 161}, {111, 122, 58}, },
            {{48, 115, -27}, {116, 116, 162}, {117, 122, 58}, },
            {{48, 95, -23}, {97, 97, 163}, {98, 122, 58}, },
            {{97, 97, 164}, },
            {{113, 113, 165}, },
            {{114, 114, 166}, },
            {},
            {{48, 122, -23}, },
            {{48, 110, -28}, {111, 111, 167}, {112, 122, 58}, },
            {{48, 108, -72}, {109, 109, 168}, {110, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 100, -30}, {101, 101, 169}, {102, 122, 58}, },
            {{48, 110, -28}, {111, 111, 170}, {112, 122, 58}, },
            {{48, 110, -28}, {111, 111, 171}, {112, 122, 58}, },
            {{48, 122, -23}, },
            {{108, 108, 172}, },
            {{117, 117, 173}, },
            {{97, 97, 174}, },
            {{48, 122, -23}, },
            {{48, 95, -23}, {97, 97, 175}, {98, 122, 58}, },
            {{48, 104, -73}, {105, 105, 176}, {106, 122, 58}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{105, 105, 177}, },
            {{97, 97, 178}, },
            {},
            {{48, 122, -23}, },
            {{48, 113, -77}, {114, 114, 179}, {115, 122, 58}, },
            {{101, 101, 180}, },
            {{110, 110, 181}, },
            {{48, 110, -28}, {111, 111, 182}, {112, 122, 58}, },
            {},
            {{116, 116, 183}, },
            {{48, 122, -23}, },
            {{111, 111, 184}, },
            {},
        }
        { // COMENTARIO
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 33, 1}, {34, 34, 6}, {35, 36, 1}, {37, 37, 7}, {38, 38, 1}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 1}, {47, 47, 15}, {48, 57, 16}, {58, 58, 17}, {59, 59, 18}, {60, 60, 19}, {61, 61, 20}, {62, 62, 21}, {63, 64, 1}, {65, 90, 22}, {91, 91, 23}, {92, 92, 1}, {93, 93, 24}, {94, 94, 1}, {95, 95, 25}, {96, 96, 1}, {97, 97, 26}, {98, 98, 27}, {99, 99, 28}, {100, 100, 29}, {101, 101, 30}, {102, 102, 31}, {103, 104, 32}, {105, 105, 33}, {106, 107, 32}, {108, 108, 34}, {109, 109, 32}, {110, 110, 35}, {111, 111, 36}, {112, 112, 37}, {113, 113, 32}, {114, 114, 38}, {115, 115, 39}, {116, 117, 32}, {118, 118, 40}, {119, 119, 32}, {120, 120, 41}, {121, 122, 32}, {123, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{0, 32, -2}, {33, 41, 1}, {43, 65535, -3}, },
            {{0, 12, -2}, {13, 13, 42}, {14, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 9, 43}, {10, 10, 1}, {11, 38, 43}, {39, 39, 44}, {40, 41, 43}, {42, 42, 45}, {43, 46, 43}, {47, 47, 45}, {48, 57, 46}, {58, 64, 43}, {65, 90, 47}, {91, 96, 43}, {97, 122, 48}, {123, 65535, 43}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{47, 47, 49}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{42, 42, 50}, },
            {{0, 41, 1}, {43, 43, 1}, {44, 44, 51}, {45, 46, 1}, {48, 57, 16}, {58, 65535, 1}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 52}, {62, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 60, -19}, {61, 61, 53}, {62, 62, 54}, {63, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 60, -19}, {61, 61, 55}, {62, 65535, 1}, },
            {{0, 46, -3}, {48, 57, 56}, {58, 64, 1}, {65, 90, 57}, {91, 94, 1}, {95, 95, 58}, {96, 96, 1}, {97, 122, 59}, {123, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 64, -24}, {65, 90, 60}, {91, 96, -24}, {97, 122, 61}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 115, 59}, {116, 116, 62}, {117, 117, 59}, {118, 118, 63}, {119, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 110, 59}, {111, 111, 64}, {112, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 65}, {98, 110, 59}, {111, 111, 66}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 100, 59}, {101, 101, 67}, {102, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 109, 59}, {110, 110, 68}, {111, 114, 59}, {115, 115, 69}, {116, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 70}, {98, 104, 59}, {105, 105, 71}, {106, 122, 59}, {123, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 72}, {111, 122, 59}, {123, 65535, 1}, },
            {{0, 100, -31}, {101, 101, 73}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 74}, {98, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 116, 59}, {117, 117, 75}, {118, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 76}, {98, 113, 59}, {114, 114, 77}, {115, 122, 59}, {123, 65535, 1}, },
            {{0, 100, -31}, {101, 101, 78}, {102, 65535, -31}, },
            {{0, 100, -31}, {101, 101, 79}, {102, 65535, -31}, },
            {{0, 100, -31}, {101, 101, 80}, {102, 65535, -31}, },
            {{0, 110, -29}, {111, 111, 81}, {112, 65535, -29}, },
            {{0, 65535, -4}, },
            {{0, 47, -10}, {48, 65535, 43}, },
            {{0, 65535, -3}, },
            {{0, 9, 45}, {11, 38, 45}, {39, 39, 82}, {40, 65535, 45}, },
            {{0, 38, -10}, {39, 39, 83}, {40, 65535, -45}, },
            {{0, 38, -10}, {39, 39, 84}, {40, 65535, -45}, },
            {{0, 38, -10}, {39, 39, 85}, {40, 65535, -45}, },
            {},
            {},
            {{0, 46, -3}, {48, 57, 86}, {58, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -27}, },
            {{0, 65535, -24}, },
            {{0, 65535, -27}, },
            {{0, 65535, -24}, },
            {{0, 65535, -27}, },
            {{0, 65535, -27}, },
            {{0, 100, -31}, {101, 101, 87}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 88}, {98, 65535, -37}, },
            {{0, 110, -29}, {111, 111, 89}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 114, 59}, {115, 115, 90}, {116, 65535, -32}, },
            {{0, 109, -32}, {110, 110, 91}, {111, 65535, -35}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 112, 59}, {113, 113, 92}, {114, 115, 59}, {116, 116, 93}, {117, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 98, 59}, {99, 99, 94}, {100, 122, 59}, {123, 65535, 1}, },
            {{0, 98, -71}, {99, 99, 95}, {100, 107, 59}, {108, 108, 96}, {109, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 108, 59}, {109, 109, 97}, {110, 122, 59}, {123, 65535, 1}, },
            {{0, 96, -24}, {97, 104, 59}, {105, 105, 98}, {106, 115, 59}, {116, 116, 99}, {117, 65535, -70}, },
            {{0, 104, -74}, {105, 105, 100}, {106, 65535, -33}, },
            {{0, 110, -29}, {111, 111, 101}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 113, 59}, {114, 114, 102}, {115, 115, 103}, {116, 65535, -32}, },
            {{0, 110, -29}, {111, 111, 104}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 97, 105}, {98, 111, 59}, {112, 112, 106}, {113, 122, 59}, {123, 65535, 1}, },
            {{0, 109, -32}, {110, 110, 107}, {111, 65535, -35}, },
            {{0, 113, -78}, {114, 114, 108}, {115, 65535, -39}, },
            {{0, 113, -78}, {114, 114, 109}, {115, 65535, -39}, },
            {},
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -53}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 107, 59}, {108, 108, 110}, {109, 65535, -72}, },
            {{0, 107, -90}, {108, 108, 111}, {109, 65535, -72}, },
            {{0, 110, -29}, {111, 111, 112}, {112, 65535, -29}, },
            {{0, 114, -67}, {115, 115, 113}, {116, 65535, -32}, },
            {{0, 116, -38}, {117, 117, 114}, {118, 65535, -38}, },
            {{0, 96, -24}, {97, 97, 115}, {98, 65535, -37}, },
            {{0, 113, -78}, {114, 114, 116}, {115, 65535, -39}, },
            {{0, 96, -24}, {97, 97, 117}, {98, 65535, -37}, },
            {{0, 114, -67}, {115, 115, 118}, {116, 65535, -32}, },
            {{0, 31, 1}, {32, 32, 119}, {33, 41, 1}, {43, 45, 1}, {46, 46, 120}, {48, 65535, -24}, },
            {{0, 98, -71}, {99, 99, 121}, {100, 65535, -71}, },
            {{0, 100, -31}, {101, 101, 122}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 123}, {98, 65535, -37}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 124}, {98, 65535, -37}, },
            {{0, 114, -67}, {115, 115, 125}, {116, 65535, -32}, },
            {{0, 96, -24}, {97, 102, 59}, {103, 103, 126}, {104, 122, 59}, {123, 65535, 1}, },
            {{0, 107, -90}, {108, 108, 127}, {109, 65535, -72}, },
            {{0, 104, -74}, {105, 105, 128}, {106, 65535, -33}, },
            {{0, 96, -24}, {97, 97, 129}, {98, 65535, -37}, },
            {{0, 96, -24}, {97, 99, 59}, {100, 100, 130}, {101, 122, 59}, {123, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 104, -74}, {105, 105, 131}, {106, 65535, -33}, },
            {{0, 100, -31}, {101, 101, 132}, {102, 65535, -31}, },
            {{0, 65535, -24}, },
            {{0, 115, -28}, {116, 116, 133}, {117, 65535, -70}, },
            {{0, 96, -24}, {97, 97, 134}, {98, 65535, -37}, },
            {{0, 110, -29}, {111, 111, 135}, {112, 65535, -29}, },
            {{0, 100, -31}, {101, 101, 136}, {102, 65535, -31}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 137}, {112, 65535, -29}, },
            {{0, 46, -3}, {48, 96, 1}, {97, 97, 138}, {98, 100, 1}, {101, 101, 139}, {102, 111, 1}, {112, 112, 140}, {113, 114, 1}, {115, 115, 141}, {116, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 104, -74}, {105, 105, 142}, {106, 65535, -33}, },
            {{0, 104, -74}, {105, 105, 143}, {106, 65535, -33}, },
            {{0, 65535, -24}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 144}, {112, 65535, -29}, },
            {{0, 113, -78}, {114, 114, 145}, {115, 65535, -39}, },
            {{0, 65535, -24}, },
            {{0, 115, -28}, {116, 116, 146}, {117, 65535, -70}, },
            {{0, 110, -29}, {111, 111, 147}, {112, 65535, -29}, },
            {{0, 96, -24}, {97, 97, 148}, {98, 65535, -37}, },
            {{0, 100, -31}, {101, 101, 149}, {102, 65535, -31}, },
            {{0, 96, -24}, {97, 97, 150}, {98, 65535, -37}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 151}, {111, 65535, -35}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 117, 59}, {118, 118, 152}, {119, 65535, -28}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 117, 1}, {118, 118, 153}, {119, 65535, 1}, },
            {{0, 46, -3}, {48, 109, 1}, {110, 110, 154}, {111, 65535, 1}, },
            {{0, 96, -121}, {97, 97, 155}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 100, 1}, {101, 101, 156}, {102, 65535, 1}, },
            {{0, 110, -29}, {111, 111, 157}, {112, 65535, -29}, },
            {{0, 113, -78}, {114, 114, 158}, {115, 65535, -39}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 159}, {98, 65535, -37}, },
            {{0, 96, -24}, {97, 97, 160}, {98, 65535, -37}, },
            {{0, 65535, -24}, },
            {{0, 99, -110}, {100, 100, 161}, {101, 65535, -110}, },
            {{0, 65535, -24}, },
            {{0, 109, -32}, {110, 110, 162}, {111, 65535, -35}, },
            {{0, 115, -28}, {116, 116, 163}, {117, 65535, -70}, },
            {{0, 96, -24}, {97, 97, 164}, {98, 65535, -37}, },
            {{0, 96, -121}, {97, 97, 165}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 112, 1}, {113, 113, 166}, {114, 65535, 1}, },
            {{0, 46, -3}, {48, 113, 1}, {114, 114, 167}, {115, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -24}, },
            {{0, 110, -29}, {111, 111, 168}, {112, 65535, -29}, },
            {{0, 108, -73}, {109, 109, 169}, {110, 65535, -73}, },
            {{0, 65535, -24}, },
            {{0, 100, -31}, {101, 101, 170}, {102, 65535, -31}, },
            {{0, 110, -29}, {111, 111, 171}, {112, 65535, -29}, },
            {{0, 110, -29}, {111, 111, 172}, {112, 65535, -29}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 107, 1}, {108, 108, 173}, {109, 65535, 1}, },
            {{0, 46, -3}, {48, 116, 1}, {117, 117, 174}, {118, 65535, 1}, },
            {{0, 96, -121}, {97, 97, 175}, {98, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 96, -24}, {97, 97, 176}, {98, 65535, -37}, },
            {{0, 104, -74}, {105, 105, 177}, {106, 65535, -33}, },
            {{0, 65535, -24}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 104, 1}, {105, 105, 178}, {106, 65535, 1}, },
            {{0, 96, -121}, {97, 97, 179}, {98, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -24}, },
            {{0, 113, -78}, {114, 114, 180}, {115, 65535, -39}, },
            {{0, 100, -143}, {101, 101, 181}, {102, 65535, 1}, },
            {{0, 109, -141}, {110, 110, 182}, {111, 65535, 1}, },
            {{0, 110, -29}, {111, 111, 183}, {112, 65535, -29}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 115, 1}, {116, 116, 184}, {117, 65535, 1}, },
            {{0, 65535, -24}, },
            {{0, 46, -3}, {48, 110, 1}, {111, 111, 185}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {-1, 36, 36, 36, 36, 50, 56, -1, 46, 47, 54, 52, 45, 53, 55, 33, 43, 44, 58, 61, 57, 31, 48, 49, 31, 31, 31, 31, 31, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 36, -1, 32, -1, -1, -1, 39, 37, 42, -1, 63, 59, 62, 60, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 12, 31, 31, 31, 31, 31, 31, 31, 29, 31, 31, 31, 3, 31, 31, 32, 32, 32, 42, 34, 15, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 18, 31, 31, 31, 31, 8, 31, -1, 2, 31, 31, 21, 10, 31, 31, 24, 31, 31, 31, 31, 31, 26, 31, 4, 31, 20, -1, -1, -1, -1, 31, 31, 11, 31, 31, 5, 31, 16, 31, 31, 31, -1, -1, -1, 6, 1, 31, 31, 14, 31, 31, 31, 22, -1, -1, -1, 23, 31, 31, 25, 7, -1, -1, 13, 0, 31, -1, -1, 31, 17, -1, 19, -1, 9, },
        // COMENTARIO
        {38, 38, 36, 36, 36, 36, 38, 38, 38, 38, 38, 40, 38, 38, 38, 41, 33, 38, 38, 38, 38, 38, 31, 38, 38, 31, 31, 31, 31, 31, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 36, 38, 32, -1, 38, 38, 38, 39, 37, 38, 38, 38, 38, 38, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 12, 31, 31, 31, 31, 31, 31, 31, 29, 31, 31, 31, 3, 31, 31, 32, 32, 32, 32, 34, 15, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 31, 31, 31, 31, 31, 31, 31, 30, 31, 31, 18, 31, 31, 31, 31, 8, 31, 38, 2, 31, 31, 21, 10, 31, 31, 24, 31, 31, 31, 31, 31, 26, 31, 4, 31, 20, 38, 38, 38, 38, 31, 31, 11, 31, 31, 5, 31, 16, 31, 31, 31, 38, 38, 38, 6, 1, 31, 31, 14, 31, 31, 31, 22, 38, 38, 38, 23, 31, 31, 25, 7, 38, 38, 13, 0, 31, 38, 38, 31, 17, 38, 19, 38, 9, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMENTARIO = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
